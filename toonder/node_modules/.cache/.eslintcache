[{"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/index.js":"1","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/App.js":"2","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/join/join.js":"3","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findid.js":"4","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findid_after.js":"5","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mainWebtoonInfo.js":"6","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mainWebtoonList.js":"7","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mypage.js":"8","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/infoChange.js":"9","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/login/login.js":"10","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findpw.js":"11","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/newpw.js":"12","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/main_page.js":"13","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/profilechange.js":"14","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/mainBackSmall.js":"15","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/freeboard/freeboard.js":"16","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/supabase.js":"17","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/ID_background.js":"18","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/backGround.js":"19","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/mainBackground.js":"20","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/practice.js":"21"},{"size":185,"mtime":1685698173211,"results":"22","hashOfConfig":"23"},{"size":2389,"mtime":1685725338947,"results":"24","hashOfConfig":"23"},{"size":8252,"mtime":1685725338947,"results":"25","hashOfConfig":"23"},{"size":956,"mtime":1685698173201,"results":"26","hashOfConfig":"23"},{"size":850,"mtime":1685698173201,"results":"27","hashOfConfig":"23"},{"size":1697,"mtime":1685698173203,"results":"28","hashOfConfig":"23"},{"size":1533,"mtime":1685698173203,"results":"29","hashOfConfig":"23"},{"size":1805,"mtime":1685698173203,"results":"30","hashOfConfig":"23"},{"size":7022,"mtime":1685725338948,"results":"31","hashOfConfig":"23"},{"size":5305,"mtime":1685725338947,"results":"32","hashOfConfig":"23"},{"size":3066,"mtime":1685725338947,"results":"33","hashOfConfig":"23"},{"size":4108,"mtime":1685725338947,"results":"34","hashOfConfig":"23"},{"size":1634,"mtime":1685698173203,"results":"35","hashOfConfig":"23"},{"size":1289,"mtime":1685698173203,"results":"36","hashOfConfig":"23"},{"size":1918,"mtime":1685720853756,"results":"37","hashOfConfig":"23"},{"size":1988,"mtime":1685698173202,"results":"38","hashOfConfig":"23"},{"size":486,"mtime":1685698173203,"results":"39","hashOfConfig":"23"},{"size":494,"mtime":1685698173201,"results":"40","hashOfConfig":"23"},{"size":910,"mtime":1685698173201,"results":"41","hashOfConfig":"23"},{"size":1332,"mtime":1685698173201,"results":"42","hashOfConfig":"23"},{"size":2050,"mtime":1685725338948,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1l67g9a",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"47"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"47"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"47"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"47"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"47"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"47"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"47"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/index.js",[],[],[],"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/App.js",["124","125","126","127"],[],"import { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Join from './component/join/join';\nimport React, { useEffect, useState } from 'react';\nimport Newpw from './component/find/newpw';\nimport Findid from './component/find/findid';\nimport Findpw from './component/find/findpw';\nimport Login from './component/login/login';\nimport Mainpage from './component/main/main_page';\nimport Findid_after from './component/find/findid_after';\nimport MainWebtoonList from './component/main/mainWebtoonList';\nimport MainBacksmall from './component/backgrounds/mainBackSmall';\nimport MainWebtoonInfo from './component/main/mainWebtoonInfo';\nimport Mypage from './component/main/mypage';\nimport Freeboard from './component/freeboard/freeboard';\nimport InfoC from './component/main/infoChange';\nimport axios from 'axios';\nimport Profilechange from './component/main/profilechange';\nimport Practice from './component/practice';\nfunction App() {\n  //Test for Spring Data setting\n  // useEffect(() => {\n  //   axios\n  //     .get('/api/hello')\n  //     .then((response) => console.log(response.data))\n  //     .catch((error) => console.log(error));\n\n  //   axios\n  //     .get('/api/username')\n  //     .then((response) => console.log(response.data))\n  //     .catch((error) => console.log(error));\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/main_page\" element={<Mainpage />} />\n          <Route path=\"/findid\" element={<Findid />} />\n          <Route path=\"/findpw\" element={<Findpw />} />\n          <Route path=\"/findid_after\" element={<Findid_after />} />\n          <Route path=\"/mainWebtoonList\" element={<MainWebtoonList />} />\n          <Route path=\"/mainbackground\" element={<MainBacksmall />} />\n          <Route path=\"/mainwebtooninfo\" element={<MainWebtoonInfo />} />\n          <Route path=\"/freeboard\" element={<Freeboard />} />\n          <Route path=\"/mypage\" element={<Mypage />} />\n          <Route path=\"/infochange\" element={<InfoC />} />\n          <Route path=\"/newpw\" element={<Newpw />} />\n          <Route path=\"/profilechange\" element={<Profilechange />} />\n          <Route path=\"/join\" element={<Join />} />\n          <Route path=\"/practice\" element={<Practice />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/join/join.js",["128"],[],"import React, { useState, useEffect } from 'react';\nimport Background from '../backgrounds/backGround';\nimport supabase from '../supabase';\nimport styles from './join.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst CheckboxContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: 160px;\n  overflow-y: scroll;\n  border: 1px solid #ccc;\n  padding: 10px;\n  width: 470px;\n  transform: translateX(5%);\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  top: 455px;\n  border-radius: 10px;\n  background-color: white;\n  color: grey;\n`;\n\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n  width: 50%;\n  margin-bottom: 5px;\n`;\n\nconst CheckboxInput = styled.input`\n  margin-right: 15px;\n  margin-left: 65px;\n`;\n\nfunction Join() {\n  useEffect(() => {\n    document.title = 'Toonder 회원가입';\n  }, []);\n  const [pw, setPw] = useState(''); //비밀번호 값\n  const [pwc, setPwc] = useState(''); //비밀번호 확인 값\n  const [isPwCheck, setIsPwCheck] = useState(false); //비밀번호 확인 여부\n  const [isPwValid, setIsPwValid] = useState(false); //비밀번호 유효성 여부\n  const [firstName, setFirstName] = useState(''); //이름 값\n  const [lastName, setLastName] = useState(''); //성씨 값\n  const [email, setEmail] = useState(''); //이메일 값\n  const [notAllow, setNotAllow] = useState(true); //회원가입 버튼 활성화 여부\n  const [isValidEmail, setEmailValid] = useState(false); //이메일 유효성 여부\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [selectedHashtags, setSelectedHashtags] = useState([]);\n\n  const handleCheckboxChange = (event) => {\n    const { value, checked } = event.target;\n    if (checked) {\n      setSelectedHashtags((prevSelectedHashtags) => [\n        ...prevSelectedHashtags,\n        value,\n      ]);\n    } else {\n      setSelectedHashtags((prevSelectedHashtags) =>\n        prevSelectedHashtags.filter((hashtag) => hashtag !== value)\n      );\n    }\n  };\n\n  const hashtagOptions = [\n    '공포',\n    '드라마',\n    '코믹',\n    '일상',\n    '판타지',\n    '액션',\n    '역사',\n    '학원',\n    'SF',\n    '학습만화',\n    '캠페인',\n    '스포츠',\n    '동성애',\n    '추리',\n    '모험',\n    '무협',\n    '시사',\n    '교양',\n    '요리',\n    '성인',\n    '순정',\n    'BL',\n    '소년',\n    '미스터리',\n    'GL',\n    '로맨스판타지',\n    '카툰',\n    '기관발행물',\n    '만화이론',\n    '로맨스',\n    '그래픽노블',\n    '개그',\n  ];\n\n  useEffect(() => {\n    if (\n      isValidEmail &&\n      isPwCheck &&\n      isPwValid &&\n      firstName.length > 0 &&\n      lastName.length > 0 &&\n      selectedHashtags.length > 0\n    )\n      setNotAllow(false);\n    else setNotAllow(true);\n    return;\n  }, [\n    isValidEmail,\n    isPwValid,\n    isPwCheck,\n    firstName,\n    lastName,\n    selectedHashtags,\n  ]);\n\n  const handleFirstName = (e) => {\n    setFirstName(e.target.value);\n  };\n\n  const handleLastName = (e) => {\n    setLastName(e.target.value);\n  };\n\n  const handlePW = (e) => {\n    setPw(e.target.value);\n\n    const regex = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,10}$/;\n    if (regex.test(e.target.value)) {\n      setIsPwValid(true);\n    } else {\n      setIsPwValid(false);\n    }\n\n    if (e.target.value === pwc) {\n      setIsPwCheck(true);\n    } else {\n      setIsPwCheck(false);\n    }\n  };\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n    const regex =\n      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n    if (regex.test(e.target.value)) {\n      setEmailValid(true);\n    } else {\n      setEmailValid(false);\n    }\n  };\n\n  const handleCheckPw = (e) => {\n    setPwc(e.target.value);\n\n    if (pw === e.target.value) {\n      setIsPwCheck(true);\n    } else {\n      setIsPwCheck(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    //////////////체크박스로 입력받은 해시태그는 공백으로 단어가 분리된 문자열로 저장을 해서 데이터로 보냄\n    setLoading(true);\n    const hashtag = selectedHashtags.join(' ');\n    axios\n      .post('api/member/insert', {\n        mem_id: email,\n        mem_name: firstName + lastName,\n        mem_hashtag: hashtag,\n      })\n      .catch(function () {\n        console.log('Error for sending user data to Spring - creating member');\n      });\n\n    e.preventDefault();\n\n    const { data, error } = await supabase.auth.signUp({\n      email: email,\n      password: pw,\n    });\n\n    if (error) {\n      alert(error);\n      setLoading(false);\n    } else alert('인증 메일을 발송했습니다. 이메일 확인 후 로그인해주세요.');\n    navigate('/');\n  };\n\n  return (\n    <Background text=\"Join\" backgroundSize=\"600px 500px\">\n      {loading ? (\n        <div className={styles.Loading}>잠시만 기다려주세요...</div>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <div className={styles.name}>\n            <input\n              type=\"text\"\n              onChange={handleFirstName}\n              id=\"firstName\"\n              placeholder=\"이름\"\n            />\n            <input\n              type=\"text\"\n              onChange={handleLastName}\n              id=\"lastName\"\n              placeholder=\"성\"\n            />\n          </div>\n          <div className={styles.email}>\n            {!isValidEmail && email.length > 0 && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '-20px',\n                  color: 'white',\n                  fontSize: '15px',\n                }}\n              >\n                올바른 이메일을 입력해주세요\n              </div>\n            )}\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={handleEmail}\n              placeholder=\"이메일 입력\"\n            />\n          </div>\n          <div className={styles.password}>\n            {!isPwValid && pw.length > 0 && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '-20px',\n                  color: 'white',\n                  fontSize: '15px',\n                }}\n              >\n                영문, 숫자 포함 8~10자 이상 입력해주세요\n              </div>\n            )}\n            <input\n              type=\"password\"\n              onChange={handlePW}\n              value={pw}\n              placeholder=\"비밀번호\"\n            />\n            {!isPwCheck && pw.length > 0 && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '-20px',\n                  color: 'white',\n                  fontSize: '15px',\n                  left: '270px',\n                  fontWeight: 'normal',\n                }}\n              >\n                비밀번호를 한번 더 정확히 입력해주세요\n              </div>\n            )}\n            <input\n              type=\"password\"\n              onChange={handleCheckPw}\n              value={pwc}\n              placeholder=\"비밀번호 확인\"\n            />\n          </div>\n          {!selectedHashtags.length > 0 && (\n            <div\n              style={{\n                position: 'absolute',\n                color: 'white',\n                fontSize: '15px',\n                left: '594px',\n                top: '436px',\n              }}\n            >\n              좋아하는 만화 장르를 1개 이상 선택\n            </div>\n          )}\n\n          <CheckboxContainer>\n            {hashtagOptions.map((hashtag) => (\n              <CheckboxLabel key={hashtag}>\n                <CheckboxInput\n                  type=\"checkbox\"\n                  value={hashtag}\n                  onChange={handleCheckboxChange}\n                />\n                {hashtag}\n              </CheckboxLabel>\n            ))}\n          </CheckboxContainer>\n          <div>\n            <button className={styles.submit} disabled={notAllow} type=\"submit\">\n              <strong>Join</strong>\n            </button>\n          </div>\n        </form>\n      )}\n    </Background>\n  );\n}\nexport default Join;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findid.js",[],[],"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findid_after.js",["129"],[],"import React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport IDBackground from '../backgrounds/ID_background';\nimport styles from '../../style.css';\n\n\nfunction Findid_after() {\n  const navigate = useNavigate();\n\n  return (\n    <IDBackground text=\"Find ID\">\n      <div className=\"findid_body\">\n        <h1>이거 보이면 됨 제발 ㅜㅜ</h1>\n        <div className=\"findIdAfterButtonset\">\n          <button\n            onClick={() => {\n              navigate('/findpw');\n            }}\n            id=\"find_pw_button\">\n              비밀번호 찾기\n          </button>\n\n          <button\n            onClick={() => {\n              navigate('/');\n            }}\n            id=\"loginButton\">\n              확인\n            </button>\n          </div>\n      </div>\n    </IDBackground>\n  );\n}\n\nexport default Findid_after;\n\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mainWebtoonInfo.js",["130","131"],[],"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./mainPage.css\";\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport ex1 from \"../../images/ex1.png\"\nimport MainBackSmall from '../backgrounds/mainBackSmall';\n\n\nfunction MainWebtoonInfo() {\n  const navigate = useNavigate();\n\n  return (\n    <MainBackgorund>\n      <MainBackSmall>\n      <div className='mainWebtoonInfo'>\n        <div className='mainwtInfo'>\n          <img src={ex1} alt=\"image error\" />\n          <div className='subwtInfo'>\n            <h1>웹툰 정보</h1>\n            <ul>\n              <li>제목 : 유미의 세포들</li>\n              <li>글 / 그림 : 이동건</li>\n              <li>연재처 : 네이버 웹툰</li>\n            </ul>\n          </div>\n        </div>\n\n        <div className='mainStory'>\n            <h1>줄거리</h1>\n            <ul>\n              <li>유미는 지금 무슨 생각을 하고 있을까? 그녀의 머릿속에서 바쁘게 움직이는 세포들 이야기!</li>\n            </ul>\n        </div>\n      </div>\n      <div className='mainReview'>\n        <h1>리뷰</h1>\n        <section>\n          <ul>\n            <li>사람의 감정과 이성의 중도를 너무 간결하게 이해시켜주는 작품인 거 같습니다!” - Hanna Lee</li>\n            <li>네이버 웹툰 중에서 제일 재밌음! - Stephan Lee</li>\n            <li>설레는 포인트도 많고, 정주행 10번은 해야지~ - Howard Wolowitz</li>\n          </ul>\n        </section>\n        <input type=\"text\" placeholder='    리뷰를 달아보세요!'></input>\n      </div>\n      </MainBackSmall>\n\n    </MainBackgorund>\n  );\n}\n\nexport default MainWebtoonInfo;","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mainWebtoonList.js",["132","133","134","135","136","137","138","139"],[],"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./mainPage.css\";\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport ex1 from \"../../images/ex1.png\"\nimport ex2 from \"../../images/ex2.png\"\nimport ex3 from \"../../images/ex3.png\"\nimport ex4 from \"../../images/ex4.png\"\nimport ex5 from \"../../images/ex5.png\"\nimport ex6 from \"../../images/ex6.png\"\nimport ex7 from \"../../images/ex7.png\"\nimport ex8 from \"../../images/ex8.png\"\nimport MainBackSmall from '../backgrounds/mainBackSmall';\n\nfunction MainWebtoonList() {\n  const navigate = useNavigate();\n\n  return (\n    <MainBackgorund>\n        <MainBackSmall>\n\n      <div className='mainWebtoonList'>\n        <table>\n          <tr>\n              <td><button\n              onClick={() => {\n              navigate('/mainwebtooninfo');\n              }}\n              ><img src={ex1} alt=\"image error\" /></button></td>\n              <td><button><img src={ex2} alt=\"image error\" /></button></td>\n              <td><button><img src={ex3} alt=\"image error\" /></button></td>\n              <td><button><img src={ex4} alt=\"image error\" /></button></td>\n          </tr>\n          <tr>\n              <td><img src={ex5} alt=\"image error\" /></td>\n              <td><img src={ex6} alt=\"image error\" /></td>\n              <td><img src={ex7} alt=\"image error\" /></td>\n              <td><img src={ex8} alt=\"image error\" /></td>\n          </tr>\n        </table>\n      </div>\n      </MainBackSmall>\n\n    </MainBackgorund>\n  );\n}\n\n\nexport default MainWebtoonList;","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mypage.js",["140"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './mainPage.css';\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport axios from 'axios';\n\nfunction Mypage() {\n  const navigate = useNavigate();\n  const [loggedUserName, setLoggedUserName] = useState('지금 로그인하세요!');\n  useEffect(() => {\n    axios\n      .get('api/member/select/' + sessionStorage.getItem('loggedUserEmail'))\n      .then((loggedUserData) => {\n        setLoggedUserName(loggedUserData.data.mem_name);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n  return (\n    <MainBackgorund>\n      <div className=\"mainUserInfo\">\n        <div className=\"mainInfo\">\n          <img></img>\n          <h2>{loggedUserName}</h2>\n          <button\n            id=\"changeInfo\"\n            onClick={() => {\n              navigate('/infochange');\n            }}\n          >\n            <h3>정보수정</h3>\n          </button>\n        </div>\n\n        <h1>#멜로 #코믹 #액션 #유미의 세포들 #연애혁명</h1>\n      </div>\n\n      <div className=\"subUserInfo\">\n        <div className=\"myReview\">\n          <h2>나의 리뷰</h2>\n          <section>\n            <h4>유미의 세포들</h4>\n            <ul>\n              <li>\n                사람의 감정과 이성의 중도를 너무 간결하게 이해시켜주는 작품인 거\n                같습니다!\n              </li>\n            </ul>\n          </section>\n        </div>\n        <div className=\"myPost\">\n          <h2>나의 자유게시판 글</h2>\n          <section>\n            <ul>\n              <li>원주민 공포만화 관련 정보 올려주세요!</li>\n            </ul>\n          </section>\n        </div>\n      </div>\n    </MainBackgorund>\n  );\n}\n\nexport default Mypage;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/infoChange.js",["141"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport Background from '../backgrounds/backGround';\nimport supabase from '../supabase';\nimport styles from './infoChange.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nfunction InfoC() {\n  useEffect(() => {\n    document.title = 'Toonder 정보변경';\n  }, []); //페이지 타이틀\n\n  const defaultTags = ['액션', '코믹', '드라마']; // **************************백엔드에서 가져올 태그 배열예시****************************\n  const [firstName, setFirstName] = useState(''); //이름 값\n  const [lastName, setLastName] = useState(''); //성씨 값\n  const [pw, setPw] = useState(''); //비밀번호 값\n  const [pwc, setPwc] = useState(''); //비밀번호 확인 값\n  const [isPwCheck, setIsPwCheck] = useState(false); //비밀번호 확인 여부\n  const [isPwValid, setIsPwValid] = useState(false); //비밀번호 유효성 여부\n  const navigate = useNavigate();\n  const [notAllow, setNotAllow] = useState(true); //회원가입 버튼 활성화 여부\n  const [tagItem, setTagItem] = useState('');\n  const [tagList, setTagList] = useState(defaultTags);\n  const inputRef = useRef(null);\n  const whitelist = [\n    '액션',\n    '멜로',\n    '판타지',\n    '코믹',\n    '가',\n    '나',\n    '다',\n    '라',\n    '마',\n    '드라마',\n  ];\n\n  const handleSubmit = async (e) => {\n    axios\n      .post('api/member/insert', {\n        mem_name: firstName + lastName,\n        mem_hashtag:\n          '' /*****************************백엔드로 넘겨주어야할 것들*********************************************/,\n      })\n      .catch(function () {\n        console.log('Error for sending user data to Spring - creating member');\n      });\n\n    e.preventDefault();\n\n    const { data, error } = await supabase.auth.updateUser({\n      password: pw,\n    });\n\n    console.log(data.user);\n    if (error) {\n      alert(error);\n    } else {\n      alert('회원정보가 변경되었습니다.');\n      navigate(-1);\n    }\n  };\n\n  const onKeyPress = (e) => {\n    e.preventDefault();\n    if (e.target.value.length !== 0 && e.key === 'Enter') {\n      const tagValue = e.target.value.trim();\n      if (whitelist.includes(tagValue) && !tagList.includes(tagValue)) {\n        // whitelist에 지정된 단어들만 입력 가능하도록 검사\n        submitTagItem();\n      } else {\n        e.target.value = '';\n      }\n    }\n  };\n\n  const submitTagItem = () => {\n    let updatedTagList = [...tagList];\n    updatedTagList.push(tagItem);\n    setTagList(updatedTagList);\n    setTagItem('');\n  };\n\n  const deleteTagItem = (e) => {\n    e.preventDefault();\n    const deleteTagItem = e.target.parentElement.firstChild.innerText;\n    const filteredTagList = tagList.filter(\n      (tagItem) => tagItem !== deleteTagItem\n    );\n    setTagList(filteredTagList);\n  };\n  useEffect(() => {\n    if (isPwCheck && isPwValid && firstName.length > 0 && lastName.length > 0)\n      setNotAllow(false);\n    else setNotAllow(true);\n    return;\n  }, [isPwValid, isPwCheck, firstName, lastName]);\n\n  const handleFirstName = (e) => {\n    setFirstName(e.target.value);\n  };\n\n  const handleLastName = (e) => {\n    setLastName(e.target.value);\n  };\n\n  const handlePW = (e) => {\n    setPw(e.target.value);\n\n    const regex = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,10}$/;\n    if (regex.test(pw)) {\n      setIsPwValid(true);\n    } else {\n      setIsPwValid(false);\n    }\n\n    if (e.target.value === pwc) {\n      setIsPwCheck(true);\n    } else {\n      setIsPwCheck(false);\n    }\n  };\n\n  const handleCheckPw = (e) => {\n    setPwc(e.target.value);\n    if (pw === e.target.value) {\n      setIsPwCheck(true);\n    } else {\n      setIsPwCheck(false);\n    }\n  };\n\n  return (\n    <Background text=\"Info Change\" backgroundSize=\"600px 500px\">\n      <form onSubmit={handleSubmit}>\n        <div className={styles.name}>\n          <input\n            type=\"text\"\n            onChange={handleFirstName}\n            id=\"firstName\"\n            placeholder=\"이름\"\n          />\n          <input\n            type=\"text\"\n            onChange={handleLastName}\n            id=\"lastName\"\n            placeholder=\"성\"\n          />\n        </div>\n\n        <div className={styles.password}>\n          {!isPwValid && pw.length > 0 && (\n            <div\n              style={{\n                position: 'absolute',\n                top: '-20px',\n                color: 'white',\n                fontSize: '15px',\n              }}\n            >\n              영문, 숫자 포함 8~10자 이상 입력해주세요\n            </div>\n          )}\n          <input\n            type=\"password\"\n            onChange={handlePW}\n            value={pw}\n            placeholder=\"비밀번호\"\n          />\n          {!isPwCheck && pw.length > 0 && (\n            <div\n              style={{\n                position: 'absolute',\n                top: '-20px',\n                color: 'white',\n                fontSize: '15px',\n                left: '270px',\n                fontWeight: 'normal',\n              }}\n            >\n              비밀번호를 한번 더 정확히 입력해주세요\n            </div>\n          )}\n          <input\n            type=\"password\"\n            onChange={handleCheckPw}\n            value={pwc}\n            placeholder=\"비밀번호 확인\"\n          />\n        </div>\n\n        <div className={styles.textBox}>\n          <WholeBox\n            onClick={() => {\n              inputRef.current.focus();\n            }}\n          >\n            <TagBox\n              onClick={() => {\n                inputRef.current.focus();\n              }}\n            >\n              <div\n                onClick={() => {\n                  inputRef.current.focus();\n                }}\n                style={{\n                  color: 'grey',\n                  background: 'white',\n                  fontSize: '14px',\n                  height: '14px',\n                }}\n              >\n                ------좋아하는 장르를 엔터로 추가해주세요\n                [액션,판타지,멜로,코믹,드라마]------\n              </div>\n              {tagList.map((tagItem, index) => {\n                const backgroundColor =\n                  index % 3 === 0\n                    ? 'rgb(255, 147, 147)'\n                    : index % 3 === 1\n                    ? 'rgb(219, 235, 170)'\n                    : 'rgb(248, 249, 176)';\n                return (\n                  <TagItem\n                    style={{ backgroundColor: backgroundColor }}\n                    key={index}\n                  >\n                    <Text>{tagItem}</Text>\n                    <Button\n                      style={{ backgroundColor: backgroundColor }}\n                      onClick={deleteTagItem}\n                    >\n                      ❌\n                    </Button>\n                  </TagItem>\n                );\n              })}\n              <TagInput\n                type=\"text\"\n                tabIndex={2}\n                onChange={(e) => setTagItem(e.target.value)}\n                value={tagItem}\n                onKeyPress={onKeyPress}\n                ref={inputRef}\n              />\n            </TagBox>\n          </WholeBox>\n        </div>\n        <div>\n          <button className={styles.submit} disabled={notAllow} type=\"submit\">\n            <strong>Info Change</strong>\n          </button>\n        </div>\n      </form>\n    </Background>\n  );\n}\n\nconst WholeBox = styled.div`\n  padding: 0px;\n  width: 490px;\n  height: 220px;\n  transform: translateX(0%);\n  background-color: white;\n  border-radius: 10px;\n`;\n\nconst TagBox = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  height: 30px;\n  margin: 10px;\n  padding: 0 10px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n  background-color: white;\n  border-color: white;\n`;\n\nconst TagItem = styled.span`\n  display: flex;\n  align-items: center;\n  border-radius: 5px;\n  margin: 5px;\n  padding: 5px;\n  color: black;\n  font-size: 15px;\n  height: 45px;\n`;\n\nconst Text = styled.span``;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 15px;\n  font-size: 15px;\n  height: 15px;\n  margin-left: 5px;\n\n  border-radius: 50%;\n  color: red;\n`;\n\nconst TagInput = styled.input`\n  display: inline-flex;\n  width: 45px;\n  height: 15px;\n  font-family: 'Sans-serif';\n  font-weight: 500;\n  border-radius: 0px;\n  background: white;\n  border: none;\n  outline: none;\n  cursor: text;\n`;\n\nexport default InfoC;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/login/login.js",["142","143"],[],"import React, { useState, useEffect } from 'react';\nimport styles from './login.module.css'; //CSS Module 이라는 기술을 사용하면, CSS 클래스가 중첩되는 것을 완벽히 방지할 수 있음\nimport IDBackground from '../backgrounds/ID_background';\nimport { useNavigate } from 'react-router-dom';\nimport supabase from '../supabase';\n\nfunction Login() {\n  useEffect(() => {\n    document.title = 'Toonder 로그인';\n  }, []);\n  const [email, setEmail] = useState(''); //이메일 값\n  const [password, setPw] = useState(''); //비밀번호 값\n  const [emailValid, setEmailValid] = useState(false); //이메일 유효성\n  const [pwValid, setPwValid] = useState(false); //비밀번호 유효성\n  const [notAllow, setNotAllow] = useState(true); //로그인 (submit)버튼 활성화 여부\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // 이미 로그인된 상태인지 확인\n    const checkLoggedIn = async () => {\n      const { data, error } = await supabase.auth.getSession();\n      const session = data.session;\n\n      if (session !== null) {\n        // 이미 로그인된 상태라면 로그아웃하고 메인 페이지로 이동\n        alert('이미 로그인되어 있습니다.');\n        navigate('/main_page'); // 메인 페이지로 이동\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  const onClickConfirm = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email: email,\n        password: password,\n      });\n\n      if (error) {\n        alert('로그인에 실패했습니다.');\n        console.log(error);\n      } else if (data) {\n        alert('로그인 되었습니다.');\n\n        sessionStorage.setItem('loggedUserEmail', email); // 로그인 하면 sessionStorage에 email이 저장됨\n        navigate('/main_page'); // 로그인 성공 시 대시보드 페이지로 이동\n      }\n    } catch (error) {\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    //이메일 유효성과 비밀번호 유효성이 바꼈을때 둘다 유효한 경우만 login버튼 활성화 해주는 기능\n    if (emailValid && pwValid) setNotAllow(false);\n    else setNotAllow(true);\n    return;\n  }, [emailValid, pwValid]);\n\n  const handleEmail = (e) => {\n    //이메일 값을 value에 state\n    setEmail(e.target.value);\n    const regex = //이메일 유효성검사 하기위한 객체\n      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n    if (regex.test(e.target.value)) {\n      setEmailValid(true);\n    } else {\n      setEmailValid(false);\n    }\n  };\n\n  const handlePW = (e) => {\n    //위와 마찬가지 비밀번호인 경우\n    setPw(e.target.value);\n    const regex = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,10}$/;\n    if (regex.test(e.target.value)) {\n      setPwValid(true);\n    } else {\n      setPwValid(false);\n    }\n  };\n\n  return (\n    //클래스를 설정할땐 styles객체안에 있는 값을 참조하는 방식\n    <div>\n      <IDBackground text=\"Login\">\n        {loading ? (\n          <div className={styles.Loading}>로그인 중 입니다...</div>\n        ) : (\n          <form>\n            <div className={styles.Login}>\n              <div>\n                {!emailValid &&\n                  email.length > 0 && ( //이메일이 유효하지 않고 이메일을 입력하기 시작하면 에러 메세지가 뜸\n                    <div>올바른 이메일을 입력해주세요</div>\n                  )}\n              </div>\n              <div>\n                <input\n                  type=\"text\"\n                  value={email}\n                  onChange={handleEmail}\n                  placeholder=\"Enter your e-mail\"\n                />\n              </div>\n              <div>\n                {!pwValid && password.length > 0 && (\n                  <div>영문, 숫자 포함 8~10자 입력해주세요</div> //비밀번호가 유효하지 않고 비밀번호를 입력하기 시작하면 에러 메세지가 뜸\n                )}\n              </div>\n              <div>\n                <input\n                  type=\"password\"\n                  value={password}\n                  onChange={handlePW}\n                  placeholder=\"Enter your password\"\n                />\n              </div>\n              <button\n                onClick={onClickConfirm}\n                disabled={notAllow}\n                type=\"submit\"\n              >\n                <strong>Login</strong>\n              </button>\n            </div>\n          </form>\n        )}\n      </IDBackground>\n      <div className={styles.FindnSign}>\n        <button\n          onClick={() => {\n            navigate('/findid');\n          }}\n          id=\"find_id_button\"\n        >\n          아이디 찾기\n        </button>\n        &nbsp;&nbsp;\n        <button\n          onClick={() => {\n            navigate('/findpw');\n          }}\n          id=\"find_pw_button\"\n        >\n          비밀번호 찾기\n        </button>\n        &nbsp;&nbsp;\n        <button\n          onClick={() => {\n            navigate('/join');\n          }}\n          id=\"join\"\n        >\n          회원가입\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findpw.js",[],[],"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/newpw.js",[],[],"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/main_page.js",["144","145","146","147","148"],[],"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./mainPage.css\";\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport ex1 from \"../../images/ex1.png\"\nimport ex2 from \"../../images/ex2.png\"\nimport ex3 from \"../../images/ex3.png\"\nimport ex4 from \"../../images/ex4.png\"\nimport MainBackSmall from '../backgrounds/mainBackSmall';\n\nimport {useLocation} from 'react-router';\n\nfunction Mainpage(props) {\n  const navigate = useNavigate();\n  return (\n    <MainBackgorund>\n      <MainBackSmall>\n      <div className='mainPage'>\n        <main>\n          <h2>실시간 인기 반응 웹툰</h2>\n          <table>\n            <td><button\n            onClick={() => {\n            navigate('/mainwebtooninfo');\n            }}><img src={ex1} alt=\"image error\" /></button></td>\n            <td><button><img src={ex2} alt=\"image error\" /></button></td>\n            <td><button><img src={ex3} alt=\"image error\" /></button></td>\n            <td><button><img src={ex4} alt=\"image error\" /></button></td>\n          </table>\n        </main>\n        <div className='botPage'>\n          <section>\n            <ul>\n              <li>사람의 감정과 이성의 중도를 너무 간결하게 이해시켜주는 작품인 거 같습니다!” - Hanna Lee</li>\n              <li>네이버 웹툰 중에서 제일 재밌음! - Stephan Lee</li>\n              <li>설레는 포인트도 많고, 정주행 10번은 해야지~ - Howard Wolowitz</li>\n            </ul>\n          </section>\n        </div>\n      </div>\n      {props.children}\n      </MainBackSmall>\n    </MainBackgorund>\n  );\n}\n\nexport default Mainpage;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/profilechange.js",["149","150","151"],[],"import React,{useState, useEffect} from 'react';\nimport { useNavigate , Link} from 'react-router-dom';\nimport \"./mainPage.css\";\nimport Mainpage from '../main/main_page';\nimport axios from 'axios';\nimport ex1 from '../../images/ex1.png';\n\n\nfunction Profilechange() {\n  const navigate = useNavigate();\n  const [loggedUserName, setLoggedUserName] = useState('지금 로그인하세요!');\n  useEffect(() => {\n    axios\n      .get('api/member/select/'+sessionStorage.getItem('loggedUserEmail'))\n      .then(loggedUserData => {\n        setLoggedUserName(loggedUserData.data.mem_name);\n      })\n      .catch(error => console.log(error))\n  },[])\n\n  return (\n    <Mainpage>\n          <div className='profilechangeback'>\n            <div className='profilechange'>\n                <img id='changeinfoimg' src={ex1} alt=\"image error\"></img>\n                <button id='changeInfo'\n                onClick={() => {\n                    navigate('/mypage');\n                }}\n                ><h3>프로필 사진 변경</h3></button>\n\n                <button id='cancel'\n                onClick={() => {\n                    navigate('/main_page');\n                }}\n                ><h3>취소</h3></button>\n              </div>\n          </div>\n    </Mainpage>\n  );\n}\n\nexport default Profilechange;","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/mainBackSmall.js",["152"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './backGround.module.css';\nimport ex1 from '../../images/ex1.png';\nimport axios from 'axios';\n\nfunction MainBackSmall(props) {\n  const navigate = useNavigate();\n  const [loggedUserName, setLoggedUserName] = useState('지금 로그인하세요!');\n  useEffect(() => {\n    axios\n      .get('api/member/select/' + sessionStorage.getItem('loggedUserEmail'))\n      .then((loggedUserData) => {\n        setLoggedUserName(loggedUserData.data.mem_name);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <div className=\"mainBackSmall\">\n      <Link to=\"/infochange\">\n        <div className=\"mainInfo\">\n          <Link to=\"/profilechange\">\n            <img id=\"infoimg\" src={ex1} alt=\"image error\"></img>\n          </Link>\n          <h2>{loggedUserName}</h2>\n          <button id=\"changeInfo\">\n            <h3>정보수정</h3>\n          </button>\n        </div>\n      </Link>\n      <div className=\"mainButtonSet\">\n        <button\n          id=\"webtoonList\"\n          onClick={() => {\n            navigate('/mainWebtoonList');\n          }}\n        >\n          웹툰 목록\n        </button>\n        <button\n          id=\"mypage\"\n          onClick={() => {\n            navigate('/mypage');\n          }}\n        >\n          마이페이지\n        </button>\n        <button\n          id=\"freeBoard\"\n          onClick={() => {\n            navigate('/freeboard');\n          }}\n        >\n          자유게시판\n        </button>\n        <button\n          id=\"logOut\"\n          onClick={() => {\n            navigate('/');\n          }}\n        >\n          로그아웃\n        </button>\n        {/*로그아웃 시 세션 만료했음을 나타내는 기능 필요함 */}\n      </div>\n      {props.children} {/* props.children 렌더링 */}\n    </div>\n  );\n}\nexport default MainBackSmall;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/freeboard/freeboard.js",["153","154","155","156","157","158","159","160","161","162","163"],[],"import React,{useState, useEffect} from 'react';\nimport { useNavigate , Link} from 'react-router-dom';\nimport \"./freeboard.css\";\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport axios from 'axios';\n\n\nfunction Freeboard() {\n  const navigate = useNavigate();\n  const [loggedUserName, setLoggedUserName] = useState('지금 로그인하세요!');\n  useEffect(() => {\n    axios\n      .get('api/member/select/'+sessionStorage.getItem('loggedUserEmail'))\n      .then(loggedUserData => {\n        setLoggedUserName(loggedUserData.data.mem_name);\n      })\n      .catch(error => console.log(error))\n  },[])\n  return (\n    <MainBackgorund>\n        <div className='mainboard'>\n            <h2>자유게시판</h2>\n            <ul>\n              <li>\n                <Link to='/postview'>1234</Link>\n              </li>\n              <li>\n                <Link to='/postview'>1234</Link>\n              </li>\n              <li>\n                <Link to='/postview'>1234</Link>\n              </li>\n              <li>\n                <Link to='/postview'>1234</Link>\n              </li>\n              <li>\n                <Link to='/postview'>1234</Link>\n              </li>\n              <li>\n                <Link to='/postview'>1234</Link>\n              </li>\n            </ul>\n        </div>\n        <div className='subbuttons'>\n            <div class=\"pagination\">\n                <a href=\"#\">&lt;&lt;</a>\n                <a href=\"#\">&lt;</a>\n                <a class=\"active\" href=\"#\">1</a>\n                <a href=\"#\">2</a>\n                <a href=\"#\">3</a>\n                <a href=\"#\">4</a>\n                <a href=\"#\">5</a>\n                <a href=\"#\">6</a>\n                <a href=\"#\">&gt;</a>\n                <a href=\"#\">&gt;&gt;</a>\n            </div>\n            <button id=\"freewrite\"\n              onClick={() => {\n                navigate('/write');\n              }}\n              >글쓰기</button>\n        </div>\n    </MainBackgorund>\n  );\n}\n\nexport default Freeboard;","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/supabase.js",["164"],[],"import { createClient } from '@supabase/supabase-js';\nimport { Auth } from '@supabase/auth-ui-react';\n\nconst supabaseUrl = 'https://fsxogdtxxerrzpdgyyac.supabase.co/';\nconst supabaseKey =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZzeG9nZHR4eGVycnpwZGd5eWFjIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODI4NzA4NTQsImV4cCI6MTk5ODQ0Njg1NH0.4ayoRXi9Z0745i2dyqIjvm23CSBRK--iAFspUAy6pOw';\n\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nexport default supabase;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/ID_background.js",["165","166","167"],[],"import React from 'react';\nimport styles from '../../style.css';\nimport logo from '../../images/logoimage.png';\nimport { Link } from 'react-router-dom';\n\nfunction IDBackground(props) {\n  return (\n    <div className=\"id_background\">\n      <div className=\"find_logo\">\n        <img src={logo} width=\"84px\" height=\"93px\" alt=\"image error\" />\n        <strong>{props.text}</strong>\n      </div>\n      {props.children} {/* props.children 렌더링 */}\n    </div>\n  );\n}\n\nexport default IDBackground;\n\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/backGround.js",["168","169"],[],"import React from 'react';\nimport styles from './backGround.module.css';\nimport logo from '../../images/logoimage.png';\nimport { Link } from 'react-router-dom';\n//\nfunction Background(props) {\n  return (\n    <div\n      className={styles.background}\n      style={{ backgroundSize: props.backgroundSize }} //백그라운드 사이즈를 props 객체로 전달해서 컴포넌트마다 사이즈를 조정해서 사용가능\n    >\n      <div\n        className={styles.logo}\n        style={\n          {\n            top: props.top,\n            left: props.left,\n          } /*로고 위치도 props로 전달받아 컴포넌트마다 위치를 조장해서 사용가능 */\n        }\n      >\n        <img src={logo} width=\"84px\" height=\"93px\" alt=\"image error\" />\n        <strong>{props.text}</strong>\n      </div>\n      {props.children} {/* props.children 렌더링 */}\n    </div>\n  );\n}\n\nexport default Background;","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/mainBackground.js",["170","171"],[],"import React,{useState, useEffect} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport logo from '../../images/logoimage.png';\nimport \"./backGround.module.css\";\nimport axios from 'axios';\n\nfunction MainBackgorund(props) {\n  const navigate = useNavigate();\n  const [loggedUserName, setLoggedUserName] = useState('지금 로그인하세요!');\n  useEffect(() => {\n    axios\n      .get('api/member/select/'+sessionStorage.getItem('loggedUserEmail'))\n      .then(loggedUserData => {\n        setLoggedUserName(loggedUserData.data.mem_name);\n      })\n      .catch(error => console.log(error))\n  },[])\n\n  return (\n    <div className='mainPageBack'>\n      <div className='logoSearch'> {/* 좌우구분용 네브 */}\n        <div className='mainLogo'>\n          <button id=\"main_page\"\n            onClick={() => {\n              navigate('/main_page');\n            }}>\n            <img src={logo} width=\"84px\" height=\"93px\" alt=\"image error\" /><h1>Toonder</h1>\n          </button>\n        </div>\n        <div className='mainSearch'>\n          <input id=\"mainSearchInput\" type=\"text\" placeholder=\"    찾고싶은 웹툰 검색!\" />\n          <button id=\"mainSearchButton\">검색</button>\n        </div>\n      </div>\n        {props.children} {/* props.children 렌더링 */}\n    </div>\n\n  );\n}\nexport default MainBackgorund;\n\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/practice.js",[],[],{"ruleId":"172","severity":1,"message":"173","line":3,"column":17,"nodeType":"174","messageId":"175","endLine":3,"endColumn":26},{"ruleId":"172","severity":1,"message":"176","line":3,"column":28,"nodeType":"174","messageId":"175","endLine":3,"endColumn":36},{"ruleId":"172","severity":1,"message":"177","line":16,"column":8,"nodeType":"174","messageId":"175","endLine":16,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":41,"column":48,"nodeType":"180","messageId":"181","endLine":41,"endColumn":64},{"ruleId":"172","severity":1,"message":"182","line":142,"column":13,"nodeType":"174","messageId":"175","endLine":142,"endColumn":17},{"ruleId":"172","severity":1,"message":"183","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"172","severity":1,"message":"184","line":10,"column":9,"nodeType":"174","messageId":"175","endLine":10,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":17,"column":11,"nodeType":"180","endLine":17,"endColumn":46},{"ruleId":"185","severity":1,"message":"186","line":29,"column":16,"nodeType":"180","endLine":29,"endColumn":51},{"ruleId":"185","severity":1,"message":"186","line":30,"column":27,"nodeType":"180","endLine":30,"endColumn":62},{"ruleId":"185","severity":1,"message":"186","line":31,"column":27,"nodeType":"180","endLine":31,"endColumn":62},{"ruleId":"185","severity":1,"message":"186","line":32,"column":27,"nodeType":"180","endLine":32,"endColumn":62},{"ruleId":"185","severity":1,"message":"186","line":35,"column":19,"nodeType":"180","endLine":35,"endColumn":54},{"ruleId":"185","severity":1,"message":"186","line":36,"column":19,"nodeType":"180","endLine":36,"endColumn":54},{"ruleId":"185","severity":1,"message":"186","line":37,"column":19,"nodeType":"180","endLine":37,"endColumn":54},{"ruleId":"185","severity":1,"message":"186","line":38,"column":19,"nodeType":"180","endLine":38,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":22,"column":11,"nodeType":"180","endLine":22,"endColumn":16},{"ruleId":"172","severity":1,"message":"189","line":1,"column":38,"nodeType":"174","messageId":"175","endLine":1,"endColumn":44},{"ruleId":"172","severity":1,"message":"190","line":21,"column":21,"nodeType":"174","messageId":"175","endLine":21,"endColumn":26},{"ruleId":"191","severity":1,"message":"192","line":33,"column":6,"nodeType":"193","endLine":33,"endColumn":8,"suggestions":"194"},{"ruleId":"172","severity":1,"message":"195","line":11,"column":9,"nodeType":"174","messageId":"175","endLine":11,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":25,"column":16,"nodeType":"180","endLine":25,"endColumn":51},{"ruleId":"185","severity":1,"message":"186","line":26,"column":25,"nodeType":"180","endLine":26,"endColumn":60},{"ruleId":"185","severity":1,"message":"186","line":27,"column":25,"nodeType":"180","endLine":27,"endColumn":60},{"ruleId":"185","severity":1,"message":"186","line":28,"column":25,"nodeType":"180","endLine":28,"endColumn":60},{"ruleId":"172","severity":1,"message":"196","line":2,"column":24,"nodeType":"174","messageId":"175","endLine":2,"endColumn":28},{"ruleId":"172","severity":1,"message":"197","line":11,"column":10,"nodeType":"174","messageId":"175","endLine":11,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":25,"column":17,"nodeType":"180","endLine":25,"endColumn":69},{"ruleId":"185","severity":1,"message":"186","line":24,"column":13,"nodeType":"180","endLine":24,"endColumn":59},{"ruleId":"172","severity":1,"message":"197","line":10,"column":10,"nodeType":"174","messageId":"175","endLine":10,"endColumn":24},{"ruleId":"198","severity":1,"message":"199","line":46,"column":17,"nodeType":"180","endLine":46,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":47,"column":17,"nodeType":"180","endLine":47,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":48,"column":17,"nodeType":"180","endLine":48,"endColumn":44},{"ruleId":"198","severity":1,"message":"199","line":49,"column":17,"nodeType":"180","endLine":49,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":50,"column":17,"nodeType":"180","endLine":50,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":51,"column":17,"nodeType":"180","endLine":51,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":52,"column":17,"nodeType":"180","endLine":52,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":53,"column":17,"nodeType":"180","endLine":53,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":54,"column":17,"nodeType":"180","endLine":54,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":55,"column":17,"nodeType":"180","endLine":55,"endColumn":29},{"ruleId":"172","severity":1,"message":"200","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"183","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"196","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":10,"column":9,"nodeType":"180","endLine":10,"endColumn":72},{"ruleId":"172","severity":1,"message":"196","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":21,"column":9,"nodeType":"180","endLine":21,"endColumn":72},{"ruleId":"172","severity":1,"message":"197","line":9,"column":10,"nodeType":"174","messageId":"175","endLine":9,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":27,"column":13,"nodeType":"180","endLine":27,"endColumn":76},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","react/jsx-pascal-case","Imported JSX component Findid_after must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'data' is assigned a value but never used.","'styles' is defined but never used.","'navigate' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useRef' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'useLocation' is defined but never used.","'Link' is defined but never used.","'loggedUserName' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Auth' is defined but never used.",{"desc":"202","fix":"203"},"Update the dependencies array to be: [navigate]",{"range":"204","text":"205"},[1170,1172],"[navigate]"]