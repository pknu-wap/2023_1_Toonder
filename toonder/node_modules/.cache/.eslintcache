[{"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/index.js":"1","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/App.js":"2","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findid_after.js":"3","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findid.js":"4","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mainWebtoonInfo.js":"5","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mainWebtoonList.js":"6","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/freeboard/freeboard.js":"7","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/newpw.js":"8","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/login/login.js":"9","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findpw.js":"10","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/main_page.js":"11","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/infoChange.js":"12","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/join/join.js":"13","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mypage.js":"14","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/mainBackSmall.js":"15","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/ID_background.js":"16","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/supabase.js":"17","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/mainBackground.js":"18","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/backGround.js":"19","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/freeboard/write.js":"20"},{"size":185,"mtime":1685814123826,"results":"21","hashOfConfig":"22"},{"size":1663,"mtime":1685953093060,"results":"23","hashOfConfig":"22"},{"size":850,"mtime":1685814123816,"results":"24","hashOfConfig":"22"},{"size":956,"mtime":1685814123816,"results":"25","hashOfConfig":"22"},{"size":1697,"mtime":1685947408978,"results":"26","hashOfConfig":"22"},{"size":1533,"mtime":1685947408979,"results":"27","hashOfConfig":"22"},{"size":2104,"mtime":1685947691365,"results":"28","hashOfConfig":"22"},{"size":4371,"mtime":1685950418621,"results":"29","hashOfConfig":"22"},{"size":5398,"mtime":1685952762042,"results":"30","hashOfConfig":"22"},{"size":3340,"mtime":1685950091851,"results":"31","hashOfConfig":"22"},{"size":5733,"mtime":1685947408979,"results":"32","hashOfConfig":"22"},{"size":8594,"mtime":1685949912822,"results":"33","hashOfConfig":"22"},{"size":8960,"mtime":1685949831215,"results":"34","hashOfConfig":"22"},{"size":5915,"mtime":1685947408980,"results":"35","hashOfConfig":"22"},{"size":6149,"mtime":1685899049261,"results":"36","hashOfConfig":"22"},{"size":494,"mtime":1685814123816,"results":"37","hashOfConfig":"22"},{"size":486,"mtime":1685814123818,"results":"38","hashOfConfig":"22"},{"size":1182,"mtime":1685814123816,"results":"39","hashOfConfig":"22"},{"size":910,"mtime":1685814123816,"results":"40","hashOfConfig":"22"},{"size":1767,"mtime":1685947408978,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1l67g9a",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"45"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"45"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"45"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"45"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"45"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"45"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/index.js",[],[],[],"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/App.js",["116","117","118"],[],"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findid_after.js",["119"],[],"import React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport IDBackground from '../backgrounds/ID_background';\nimport styles from '../../style.css';\n\n\nfunction Findid_after() {\n  const navigate = useNavigate();\n\n  return (\n    <IDBackground text=\"Find ID\">\n      <div className=\"findid_body\">\n        <h1>이거 보이면 됨 제발 ㅜㅜ</h1>\n        <div className=\"findIdAfterButtonset\">\n          <button\n            onClick={() => {\n              navigate('/findpw');\n            }}\n            id=\"find_pw_button\">\n              비밀번호 찾기\n          </button>\n\n          <button\n            onClick={() => {\n              navigate('/');\n            }}\n            id=\"loginButton\">\n              확인\n            </button>\n          </div>\n      </div>\n    </IDBackground>\n  );\n}\n\nexport default Findid_after;\n\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findid.js",[],[],"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mainWebtoonInfo.js",["120","121"],[],"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./mainPage.css\";\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport ex1 from \"../../images/ex1.png\"\nimport MainBackSmall from '../backgrounds/mainBackSmall';\n\n\nfunction MainWebtoonInfo() {\n  const navigate = useNavigate();\n\n  return (\n    <MainBackgorund>\n      <MainBackSmall>\n      <div className='mainWebtoonInfo'>\n        <div className='mainwtInfo'>\n          <img src={ex1} alt=\"image error\" />\n          <div className='subwtInfo'>\n            <h1>웹툰 정보</h1>\n            <ul>\n              <li>제목 : 유미의 세포들</li>\n              <li>글 / 그림 : 이동건</li>\n              <li>연재처 : 네이버 웹툰</li>\n            </ul>\n          </div>\n        </div>\n\n        <div className='mainStory'>\n            <h1>줄거리</h1>\n            <ul>\n              <li>유미는 지금 무슨 생각을 하고 있을까? 그녀의 머릿속에서 바쁘게 움직이는 세포들 이야기!</li>\n            </ul>\n        </div>\n      </div>\n      <div className='mainReview'>\n        <h1>리뷰</h1>\n        <section>\n          <ul>\n            <li>사람의 감정과 이성의 중도를 너무 간결하게 이해시켜주는 작품인 거 같습니다!” - Hanna Lee</li>\n            <li>네이버 웹툰 중에서 제일 재밌음! - Stephan Lee</li>\n            <li>설레는 포인트도 많고, 정주행 10번은 해야지~ - Howard Wolowitz</li>\n          </ul>\n        </section>\n        <input type=\"text\" placeholder='    리뷰를 달아보세요!'></input>\n      </div>\n      </MainBackSmall>\n\n    </MainBackgorund>\n  );\n}\n\nexport default MainWebtoonInfo;","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mainWebtoonList.js",["122","123","124","125","126","127","128","129"],[],"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./mainPage.css\";\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport ex1 from \"../../images/ex1.png\"\nimport ex2 from \"../../images/ex2.png\"\nimport ex3 from \"../../images/ex3.png\"\nimport ex4 from \"../../images/ex4.png\"\nimport ex5 from \"../../images/ex5.png\"\nimport ex6 from \"../../images/ex6.png\"\nimport ex7 from \"../../images/ex7.png\"\nimport ex8 from \"../../images/ex8.png\"\nimport MainBackSmall from '../backgrounds/mainBackSmall';\n\nfunction MainWebtoonList() {\n  const navigate = useNavigate();\n\n  return (\n    <MainBackgorund>\n        <MainBackSmall>\n\n      <div className='mainWebtoonList'>\n        <table>\n          <tr>\n              <td><button\n              onClick={() => {\n              navigate('/mainwebtooninfo');\n              }}\n              ><img src={ex1} alt=\"image error\" /></button></td>\n              <td><button><img src={ex2} alt=\"image error\" /></button></td>\n              <td><button><img src={ex3} alt=\"image error\" /></button></td>\n              <td><button><img src={ex4} alt=\"image error\" /></button></td>\n          </tr>\n          <tr>\n              <td><img src={ex5} alt=\"image error\" /></td>\n              <td><img src={ex6} alt=\"image error\" /></td>\n              <td><img src={ex7} alt=\"image error\" /></td>\n              <td><img src={ex8} alt=\"image error\" /></td>\n          </tr>\n        </table>\n      </div>\n      </MainBackSmall>\n\n    </MainBackgorund>\n  );\n}\n\n\nexport default MainWebtoonList;","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/freeboard/freeboard.js",["130","131","132","133","134","135","136","137","138","139","140","141","142"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './freeboard.css';\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport axios from 'axios';\n\nfunction Freeboard() {\n  const navigate = useNavigate();\n  const [loggedUserName, setLoggedUserName] = useState('지금 로그인하세요!');\n  const email = sessionStorage.getItem('loggedUserEmail');\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/toonder/board');\n        setPosts(response.data);\n        console.log(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <MainBackgorund>\n      <div className=\"mainboard\">\n        <br />\n        <h2>자유게시판</h2>\n        <ul>\n          {posts.map((post) => (\n            <li key={post.brdNo}>\n              <div className=\"link-wrapper\">\n                <Link to={`/postview/${post.brdNo}`}> {post.brdTitle} </Link>\n                <div className=\"meta\">\n                  <span>{post.mem_name}</span>\n                  <span>|</span>\n                  <span>{post.brdViewCount}</span>\n                  <span>|</span>\n                  <span>{post.brdRegDate.split('T')[0]}</span>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"subbuttons\">\n        <div className=\"pagination\">\n          <a href=\"#\">&lt;&lt;</a>\n          <a href=\"#\">&lt;</a>\n          <a className=\"active\" href=\"#\">\n            1\n          </a>\n          <a href=\"#\">2</a>\n          <a href=\"#\">3</a>\n          <a href=\"#\">4</a>\n          <a href=\"#\">5</a>\n          <a href=\"#\">6</a>\n          <a href=\"#\">&gt;</a>\n          <a href=\"#\">&gt;&gt;</a>\n        </div>\n        <button\n          id=\"freewrite\"\n          onClick={() => {\n            navigate('/write');\n          }}\n        >\n          글쓰기\n        </button>\n      </div>\n    </MainBackgorund>\n  );\n}\n\nexport default Freeboard;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/newpw.js",[],[],"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/login/login.js",["143","144"],[],"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/find/findpw.js",[],[],"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/main_page.js",["145","146","147","148"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './mainPage.css';\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport MainBackSmall from '../backgrounds/mainBackSmall';\nimport supabase from '../supabase';\nimport { useLocation } from 'react-router';\nimport axios from 'axios';\nimport logo from '../../images/logo2.png';\nimport { FaSpinner } from 'react-icons/fa'; // 로딩 아이콘 추가\n\nfunction Mainpage(props) {\n  const navigate = useNavigate();\n  const [resdata, setResData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data, error } = await supabase.auth.getSession();\n      const session = data.session;\n\n      if (session === null) {\n        alert('로그인을 먼저 해주세요.');\n        navigate('/');\n      } else {\n        const email = session.user.email;\n        const requestData = {\n          email: email,\n        };\n\n        axios\n          .post('toonder/recommand', requestData)\n          .then((res) => {\n            console.log(res.data);\n            setResData(res.data);\n            setIsLoading(false); // 데이터 가져오기 완료 후 로딩 상태 변경\n          })\n          .catch((error) => console.log(error));\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleRecommendation = () => {\n    setIsLoading(true); // 새로운 추천 웹툰 이미지를 가져오기 전에 로딩 상태를 true로 설정\n\n    const fetchData = async () => {\n      const email = sessionStorage.getItem('loggedUserEmail');\n      const requestData = {\n        email: email,\n      };\n\n      axios\n        .post('toonder/recommand', requestData)\n        .then((res) => {\n          console.log(res.data);\n          setResData(res.data);\n          setIsLoading(false); // 데이터 가져오기 완료 후 로딩 상태 변경\n        })\n        .catch((error) => console.log(error));\n    };\n\n    fetchData();\n  };\n\n  return (\n    <MainBackgorund>\n      <div style={{ position: 'relative' }}>\n        <h2\n          style={{\n            position: 'absolute',\n            color: 'white',\n            display: 'flex',\n            zIndex: 1,\n            top: '90px',\n            left: '300px',\n          }}\n        >\n          추천 웹툰 목록\n        </h2>\n      </div>{' '}\n      <MainBackSmall>\n        <div className=\"mainPage\">\n          <div style={{ position: 'absolute' }}>\n            <button\n              onClick={handleRecommendation}\n              style={{\n                position: 'absolute',\n                color: 'rgb(255, 147, 147)',\n                display: 'flex',\n                zIndex: 1,\n                backgroundColor: 'white',\n                width: '150px',\n                height: '25px',\n                justifyContent: 'center', // 가로 가운데 정렬\n                alignItems: 'center',\n                fontSize: '22px',\n                top: '-235px',\n                left: '765px',\n                borderRadius: '10px',\n              }}\n            >\n              추천 새로 받기\n            </button>\n          </div>\n          {isLoading ? ( // 로딩 중일 때의 화면\n            <div\n              style={{\n                fontSize: '100px',\n                color: 'white',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '100vh',\n              }}\n            >\n              <FaSpinner className=\"loadingIcon\" />\n            </div>\n          ) : (\n            <main>\n              <div className=\"recommendationButtonWrapper\"></div>\n              <table>\n                <tbody>\n                  <tr>\n                    {resdata.map((item, index) => (\n                      <td key={index}>\n                        <button\n                          className=\"refresh\"\n                          onClick={() => {\n                            navigate('/mainwebtooninfo');\n                          }}\n                        >\n                          <div className=\"imageContainer\">\n                            <img\n                              className=\"webtoonImage\"\n                              src={item.imageDownloadUrl}\n                              alt=\"image error\"\n                              onError={(e) => {\n                                e.target.onerror = null;\n                                e.target.src = logo;\n                              }}\n                            />\n                          </div>\n                          <br />\n\n                          <p\n                            className=\"webtoonTitle\"\n                            style={{ fontSize: '22px', color: 'white' }}\n                          >\n                            {item.title}\n                          </p>\n                        </button>\n                      </td>\n                    ))}\n                  </tr>\n                </tbody>\n              </table>\n            </main>\n          )}\n          <div className=\"botPage\">\n            <section>\n              <ul>\n                <li>\n                  사람의 감정과 이성의 중도를 너무 간결하게 이해시켜주는 작품인\n                  거 같습니다!” - Hanna Lee\n                </li>\n                <li>네이버 웹툰 중에서 제일 재밌음! - Stephan Lee</li>\n                <li>\n                  설레는 포인트도 많고, 정주행 10번은 해야지~ - Howard Wolowitz\n                </li>\n              </ul>\n            </section>\n          </div>\n        </div>\n        {props.children}\n      </MainBackSmall>\n    </MainBackgorund>\n  );\n}\n\nexport default Mainpage;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/infoChange.js",["149"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport Background from '../backgrounds/backGround';\nimport supabase from '../supabase';\nimport styles from './infoChange.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { FaSpinner } from 'react-icons/fa'; // 로딩 아이콘 추가\n\nfunction InfoC() {\n  useEffect(() => {\n    document.title = 'Toonder 정보변경';\n  }, []); //페이지 타이틀\n\n  const [firstName, setFirstName] = useState(''); //이름 값\n  const [lastName, setLastName] = useState(''); //성씨 값\n  const [pw, setPw] = useState(''); //비밀번호 값\n  const [pwc, setPwc] = useState(''); //비밀번호 확인 값\n  const [isPwCheck, setIsPwCheck] = useState(false); //비밀번호 확인 여부\n  const [isPwValid, setIsPwValid] = useState(false); //비밀번호 유효성 여부\n  const navigate = useNavigate();\n  const [notAllow, setNotAllow] = useState(true); //회원가입 버튼 활성화 여부\n  const [selectedHashtags, setSelectedHashtags] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const storedHashtags = localStorage.getItem('loggedUserHashTag');\n    if (storedHashtags) {\n      const tags = storedHashtags.split(' ').map((tag) => tag.replace('#', ''));\n      setSelectedHashtags(tags);\n    }\n  }, []); //사용자 해시태그 정보 가져옴\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const hashtag = '#' + selectedHashtags.join(' #');\n    const email = sessionStorage.getItem('loggedUserEmail');\n\n    try {\n      await supabase.auth.updateUser({ password: pw });\n\n      axios\n        .post('toonder/update', {\n          mem_email: email,\n          mem_name: lastName + firstName,\n          mem_hashtag: hashtag,\n        })\n        .then(() => {\n          localStorage.removeItem('loggedUserName');\n          localStorage.removeItem('loggedUserHashTag');\n          setLoading(false);\n          alert('회원정보가 변경되었습니다.');\n          navigate(-1);\n        })\n        .catch(() => {\n          console.log(\n            'Error for sending user data to Spring - creating member'\n          );\n          alert('회원정보 변경 중에 오류가 발생했습니다.');\n        });\n    } catch (error) {\n      console.error(error);\n      alert('회원정보 변경 중에 오류가 발생했습니다.');\n    }\n  };\n\n  useEffect(() => {\n    if (\n      isPwCheck &&\n      isPwValid &&\n      firstName.length > 0 &&\n      lastName.length > 0 &&\n      selectedHashtags.length > 0\n    )\n      setNotAllow(false);\n    else setNotAllow(true);\n\n    return;\n  }, [isPwValid, isPwCheck, firstName, lastName, selectedHashtags]);\n\n  const handleFirstName = (e) => {\n    setFirstName(e.target.value);\n  };\n\n  const handleLastName = (e) => {\n    setLastName(e.target.value);\n  };\n\n  const handlePW = (e) => {\n    setPw(e.target.value);\n\n    const regex = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,10}$/;\n    if (regex.test(e.target.value)) {\n      setIsPwValid(true);\n    } else {\n      setIsPwValid(false);\n    }\n\n    if (e.target.value === pwc) {\n      setIsPwCheck(true);\n    } else {\n      setIsPwCheck(false);\n    }\n  };\n\n  const handleCheckPw = (e) => {\n    setPwc(e.target.value);\n    if (pw === e.target.value) {\n      setIsPwCheck(true);\n    } else {\n      setIsPwCheck(false);\n    }\n  };\n\n  const handleCheckboxChange = (event) => {\n    const { value, checked } = event.target;\n    if (checked) {\n      setSelectedHashtags((prevSelectedHashtags) => [\n        ...prevSelectedHashtags,\n        value,\n      ]);\n    } else {\n      setSelectedHashtags((prevSelectedHashtags) =>\n        prevSelectedHashtags.filter((hashtag) => hashtag !== value)\n      );\n    }\n  };\n\n  const hashtagOptions = [\n    '공포',\n    '드라마',\n    '코믹',\n    '일상',\n    '판타지',\n    '액션',\n    '역사',\n    '학원',\n    'SF',\n    '학습만화',\n    '캠페인',\n    '스포츠',\n    '동성애',\n    '추리',\n    '모험',\n    '무협',\n    '시사',\n    '교양',\n    '요리',\n    '성인',\n    '순정',\n    'BL',\n    '소년',\n    '미스터리',\n    'GL',\n    '로맨스판타지',\n    '카툰',\n    '기관발행물',\n    '만화이론',\n    '로맨스',\n    '그래픽노블',\n    '개그',\n  ];\n\n  return (\n    <Background text=\"Info Change\" backgroundSize=\"600px 500px\">\n      {loading ? ( // 로딩 중일 때의 화면\n        <div\n          style={{\n            fontSize: '100px',\n            color: 'white',\n            display: 'flex',\n            alignItems: 'center',\n            position: 'absolute',\n            top: '30px',\n          }}\n        >\n          <FaSpinner className={styles.loadingIcon} />\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <div className={styles.name}>\n            <input\n              type=\"text\"\n              onChange={handleFirstName}\n              id=\"firstName\"\n              placeholder=\"이름\"\n              autoComplete=\"off\"\n            />\n            <input\n              type=\"text\"\n              onChange={handleLastName}\n              id=\"lastName\"\n              placeholder=\"성\"\n              autoComplete=\"off\"\n            />\n          </div>\n\n          <div className={styles.password}>\n            {!isPwValid && pw.length > 0 && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '-20px',\n                  color: 'white',\n                  fontSize: '15px',\n                }}\n              >\n                영문, 숫자 포함 8~10자 이상 입력해주세요\n              </div>\n            )}\n            <input\n              type=\"password\"\n              onChange={handlePW}\n              value={pw}\n              placeholder=\"비밀번호\"\n              autoComplete=\"off\"\n            />\n            {!isPwCheck && pw.length > 0 && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '-20px',\n                  color: 'white',\n                  fontSize: '15px',\n                  left: '270px',\n                  fontWeight: 'normal',\n                }}\n              >\n                비밀번호를 한번 더 정확히 입력해주세요\n              </div>\n            )}\n            <input\n              type=\"password\"\n              onChange={handleCheckPw}\n              value={pwc}\n              placeholder=\"비밀번호 확인\"\n              autoComplete=\"off\"\n            />\n          </div>\n\n          {!selectedHashtags.length > 0 && (\n            <div\n              style={{\n                position: 'absolute',\n              }}\n            >\n              <div\n                style={{\n                  position: 'relative',\n                  color: 'white',\n                  fontSize: '15px',\n                  left: '70%',\n                  top: '-50px',\n                }}\n              >\n                좋아하는 만화 장르를 1개 이상 선택\n              </div>\n            </div>\n          )}\n\n          <CheckboxContainer>\n            {hashtagOptions.map((hashtag) => (\n              <CheckboxLabel key={hashtag}>\n                <CheckboxInput\n                  type=\"checkbox\"\n                  value={hashtag}\n                  onChange={handleCheckboxChange}\n                  checked={selectedHashtags.includes(hashtag)}\n                />\n                {hashtag}\n              </CheckboxLabel>\n            ))}\n          </CheckboxContainer>\n          <div>\n            <button className={styles.submit} disabled={notAllow} type=\"submit\">\n              <strong>Info Change</strong>\n            </button>\n          </div>\n        </form>\n      )}\n    </Background>\n  );\n}\n\nconst CheckboxContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: 200px;\n  overflow-y: auto;\n  border: 1px solid #ccc;\n  padding: 10px;\n  width: 470px;\n  transform: translateX(5%);\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  top: 391px;\n  border-radius: 10px;\n  background-color: white;\n  color: grey;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n    border-radius: 3px;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n  width: 50%;\n  margin-bottom: 5px;\n`;\n\nconst CheckboxInput = styled.input`\n  margin-right: 15px;\n  margin-left: 65px;\n`;\n\nexport default InfoC;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/join/join.js",["150"],[],"import React, { useState, useEffect } from 'react';\nimport Background from '../backgrounds/backGround';\nimport supabase from '../supabase';\nimport styles from './join.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { FaSpinner } from 'react-icons/fa';\n\nconst CheckboxContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: 160px;\n  overflow-y: auto;\n  border: 1px solid #ccc;\n  padding: 10px;\n  width: 470px;\n  transform: translateX(5%);\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  top: 455px;\n  border-radius: 10px;\n  background-color: white;\n  color: grey;\n\n  /* 스크롤 스타일 적용 */\n  ::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n    border-radius: 3px;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n  width: 50%;\n  margin-bottom: 5px;\n`;\n\nconst CheckboxInput = styled.input`\n  margin-right: 15px;\n  margin-left: 65px;\n`;\n\nfunction Join() {\n  useEffect(() => {\n    document.title = 'Toonder 회원가입';\n  }, []);\n  const [pw, setPw] = useState(''); //비밀번호 값\n  const [pwc, setPwc] = useState(''); //비밀번호 확인 값\n  const [isPwCheck, setIsPwCheck] = useState(false); //비밀번호 확인 여부\n  const [isPwValid, setIsPwValid] = useState(false); //비밀번호 유효성 여부\n  const [firstName, setFirstName] = useState(''); //이름 값\n  const [lastName, setLastName] = useState(''); //성씨 값\n  const [email, setEmail] = useState(''); //이메일 값\n  const [notAllow, setNotAllow] = useState(true); //회원가입 버튼 활성화 여부\n  const [isValidEmail, setEmailValid] = useState(false); //이메일 유효성 여부\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [selectedHashtags, setSelectedHashtags] = useState([]);\n\n  const handleCheckboxChange = (event) => {\n    const { value, checked } = event.target;\n    if (checked) {\n      setSelectedHashtags((prevSelectedHashtags) => [\n        ...prevSelectedHashtags,\n        value,\n      ]);\n    } else {\n      setSelectedHashtags((prevSelectedHashtags) =>\n        prevSelectedHashtags.filter((hashtag) => hashtag !== value)\n      );\n    }\n  };\n\n  const hashtagOptions = [\n    '공포',\n    '드라마',\n    '코믹',\n    '일상',\n    '판타지',\n    '액션',\n    '역사',\n    '학원',\n    'SF',\n    '학습만화',\n    '캠페인',\n    '스포츠',\n    '동성애',\n    '추리',\n    '모험',\n    '무협',\n    '시사',\n    '교양',\n    '요리',\n    '성인',\n    '순정',\n    'BL',\n    '소년',\n    '미스터리',\n    'GL',\n    '로맨스판타지',\n    '카툰',\n    '기관발행물',\n    '만화이론',\n    '로맨스',\n    '그래픽노블',\n    '개그',\n  ];\n\n  useEffect(() => {\n    if (\n      isValidEmail &&\n      isPwCheck &&\n      isPwValid &&\n      firstName.length > 0 &&\n      lastName.length > 0 &&\n      selectedHashtags.length > 0\n    )\n      setNotAllow(false);\n    else setNotAllow(true);\n    return;\n  }, [\n    isValidEmail,\n    isPwValid,\n    isPwCheck,\n    firstName,\n    lastName,\n    selectedHashtags,\n  ]);\n\n  const handleFirstName = (e) => {\n    setFirstName(e.target.value);\n  };\n\n  const handleLastName = (e) => {\n    setLastName(e.target.value);\n  };\n\n  const handlePW = (e) => {\n    setPw(e.target.value);\n\n    const regex = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,10}$/;\n    if (regex.test(e.target.value)) {\n      setIsPwValid(true);\n    } else {\n      setIsPwValid(false);\n    }\n\n    if (e.target.value === pwc) {\n      setIsPwCheck(true);\n    } else {\n      setIsPwCheck(false);\n    }\n  };\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n    const regex =\n      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n    if (regex.test(e.target.value)) {\n      setEmailValid(true);\n    } else {\n      setEmailValid(false);\n    }\n  };\n\n  const handleCheckPw = (e) => {\n    setPwc(e.target.value);\n\n    if (pw === e.target.value) {\n      setIsPwCheck(true);\n    } else {\n      setIsPwCheck(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    //////////////체크박스로 입력받은 해시태그는 공백으로 단어가 분리된 문자열로 저장을 해서 데이터로 보냄\n    setLoading(true);\n    const hashtag = '#' + selectedHashtags.join(' #');\n    axios\n      .post('toonder/join', {\n        mem_email: email,\n        mem_name: lastName + firstName,\n        mem_hashtag: hashtag,\n      })\n      .catch(function () {\n        console.log('Error for sending user data to Spring - creating member');\n      });\n\n    e.preventDefault();\n\n    const { data, error } = await supabase.auth.signUp({\n      email: email,\n      password: pw,\n    });\n\n    if (error) {\n      alert(error);\n      setLoading(false);\n    } else alert('인증 메일을 발송했습니다. 이메일 확인 후 로그인해주세요.');\n    navigate('/');\n  };\n\n  return (\n    <Background text=\"Join\" backgroundSize=\"600px 500px\">\n      {loading ? (\n        <div\n          style={{\n            fontSize: '120px',\n            color: 'white',\n            display: 'flex',\n            alignItems: 'center',\n            top: '385px',\n            position: 'absolute',\n          }}\n        >\n          <FaSpinner className={styles.loadingIcon} />\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <div className={styles.name}>\n            <input\n              type=\"text\"\n              onChange={handleFirstName}\n              id=\"firstName\"\n              placeholder=\"이름\"\n            />\n            <input\n              type=\"text\"\n              onChange={handleLastName}\n              id=\"lastName\"\n              placeholder=\"성\"\n            />\n          </div>\n          <div className={styles.email}>\n            {!isValidEmail && email.length > 0 && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '-20px',\n                  color: 'white',\n                  fontSize: '15px',\n                }}\n              >\n                올바른 이메일을 입력해주세요\n              </div>\n            )}\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={handleEmail}\n              placeholder=\"이메일 입력\"\n            />\n          </div>\n          <div className={styles.password}>\n            {!isPwValid && pw.length > 0 && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '-20px',\n                  color: 'white',\n                  fontSize: '15px',\n                }}\n              >\n                영문, 숫자 포함 8~10자 이상 입력해주세요\n              </div>\n            )}\n            <input\n              type=\"password\"\n              onChange={handlePW}\n              value={pw}\n              placeholder=\"비밀번호\"\n            />\n            {!isPwCheck && pw.length > 0 && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '-20px',\n                  color: 'white',\n                  fontSize: '15px',\n                  left: '270px',\n                  fontWeight: 'normal',\n                }}\n              >\n                비밀번호를 한번 더 정확히 입력해주세요\n              </div>\n            )}\n            <input\n              type=\"password\"\n              onChange={handleCheckPw}\n              value={pwc}\n              placeholder=\"비밀번호 확인\"\n            />\n          </div>\n          {!selectedHashtags.length > 0 && (\n            <div\n              style={{\n                position: 'absolute',\n              }}\n            >\n              <div\n                style={{\n                  position: 'relative',\n                  color: 'white',\n                  fontSize: '15px',\n                  left: '70%',\n                  top: '-10px',\n                }}\n              >\n                좋아하는 만화 장르를 1개 이상 선택\n              </div>\n            </div>\n          )}\n\n          <CheckboxContainer>\n            {hashtagOptions.map((hashtag) => (\n              <CheckboxLabel key={hashtag}>\n                <CheckboxInput\n                  type=\"checkbox\"\n                  value={hashtag}\n                  onChange={handleCheckboxChange}\n                />\n                {hashtag}\n              </CheckboxLabel>\n            ))}\n          </CheckboxContainer>\n          <div>\n            <button className={styles.submit} disabled={notAllow} type=\"submit\">\n              <strong>Join</strong>\n            </button>\n          </div>\n        </form>\n      )}\n    </Background>\n  );\n}\nexport default Join;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/main/mypage.js",["151","152","153","154"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './mainPage.css';\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport axios from 'axios';\nimport supabase from '../supabase';\nimport ex1 from '../../images/ex1.png';\n\nfunction Mypage() {\n  const navigate = useNavigate();\n  const [loggedUserName, setLoggedUserName] = useState(\n    localStorage.getItem('loggedUserName')\n  );\n  const [loggedUserHashTag, setLoggedUserHashTag] = useState(\n    localStorage.getItem('loggedUserHashTag')\n  );\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const [loggedUserImage, setLoggedUserImage] = useState(\n    localStorage.getItem('loggedUserPhoto') || ex1\n  );\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await supabase.auth.getSession();\n      const email = data.session.user.email;\n      const requestData = {\n        email: email,\n      };\n\n      axios\n        .post('toonder/mypage', requestData)\n        .then((hashData) => {\n          console.log(hashData.data.mem_hashtag);\n          setLoggedUserHashTag(hashData.data.mem_hashtag);\n          localStorage.setItem('loggedUserHashTag', hashData.data.mem_hashtag);\n        })\n        .catch((error) => console.log(error));\n\n      if (!localStorage.getItem('loggedUserName')) {\n        axios\n          .post('toonder/name', requestData)\n          .then((loggedUserData) => {\n            console.log(loggedUserData.data.mem_name);\n            setLoggedUserName(loggedUserData.data.mem_name);\n            localStorage.setItem(\n              'loggedUserName',\n              loggedUserData.data.mem_name\n            );\n          })\n          .catch((error) => console.log(error));\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <MainBackgorund>\n      <div className=\"mainUserInfo\">\n        <div className=\"mainInfo\">\n          <div onClick={openModal}>\n            <img id=\"infoimg\" src={loggedUserImage} alt=\"image error\" />\n          </div>\n          <h2>{loggedUserName}</h2>\n          <button\n            id=\"changeInfo\"\n            onClick={() => {\n              navigate('/infochange');\n            }}\n          >\n            <h3>정보수정</h3>\n          </button>\n        </div>\n\n        <h1>{loggedUserHashTag}</h1>\n      </div>\n\n      <div className=\"subUserInfo\">\n        <div className=\"myReview\">\n          <h2>나의 리뷰</h2>\n          <section>\n            <h4>유미의 세포들</h4>\n            <ul>\n              <li>\n                사람의 감정과 이성의 중도를 너무 간결하게 이해시켜주는 작품인 거\n                같습니다!\n              </li>\n            </ul>\n          </section>\n        </div>\n        <div className=\"myPost\">\n          <h2>나의 자유게시판 글</h2>\n          <section>\n            <ul>\n              <li>원주민 공포만화 관련 정보 올려주세요!</li>\n            </ul>\n          </section>\n        </div>\n      </div>\n      <div>\n        {modalOpen && (\n          <ModalBasic\n            setModalOpen={setModalOpen}\n            setLoggedUserImage={setLoggedUserImage}\n            openModal={openModal}\n          />\n        )}\n      </div>\n    </MainBackgorund>\n  );\n}\n\nfunction ModalBasic({ setModalOpen, setLoggedUserImage, openModal }) {\n  const [selectedImage, setSelectedImage] = useState(\n    localStorage.getItem('loggedUserPhoto') || ex1\n  );\n  const [newImage, setNewImage] = useState(null);\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      setSelectedImage(reader.result);\n      setNewImage(file);\n    };\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSave = async () => {\n    if (newImage) {\n      console.log('새 이미지 저장:', newImage);\n\n      const { data } = await supabase.auth.getSession();\n      axios\n        .post('toonder/photo/update', {\n          email: data.session.user.email,\n          image: selectedImage,\n        })\n        .then((res) => console.log(res))\n        .catch((error) => console.log(error));\n\n      localStorage.setItem('loggedUserPhoto', selectedImage);\n      setLoggedUserImage(selectedImage);\n    }\n\n    closeModal();\n  };\n\n  const modalRef = useRef(null);\n\n  useEffect(() => {\n    const handler = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setModalOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handler);\n\n    return () => {\n      document.removeEventListener('mousedown', handler);\n    };\n  }, []);\n\n  return (\n    <div className=\"profilechangeback\">\n      <div className=\"profilechange\" ref={modalRef}>\n        <img id=\"changeinfoimg\" src={selectedImage} alt=\"image error\" />\n        <div id=\"changeFile\">\n          <label htmlFor=\"chooseFile\">\n            <h3>프로필 사진 변경</h3>\n          </label>\n        </div>\n        <div style={{ position: 'relative' }}>\n          <input\n            type=\"file\"\n            id=\"chooseFile\"\n            name=\"chooseFile\"\n            accept=\"image/*\"\n            onChange={handleFileChange}\n            style={{\n              position: 'absolute',\n              right: '-200px',\n              top: '0px',\n              marginTop: '10px',\n            }}\n          />\n        </div>\n        <div id=\"changeButtonSet\" style={{ marginTop: '25px' }}>\n          <button id=\"submitButton\" type=\"submit\" onClick={handleSave}>\n            <h3>저장</h3>\n          </button>\n          <br />\n          <button id=\"cancel\" onClick={closeModal}>\n            <h3>취소</h3>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Mypage;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/mainBackSmall.js",["155","156","157","158"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './backGround.module.css';\nimport ex1 from '../../images/ex1.png';\nimport axios from 'axios';\nimport supabase from '../supabase';\n\nfunction MainBackSmall(props) {\n  const navigate = useNavigate();\n  const [loggedUserName, setLoggedUserName] = useState(\n    localStorage.getItem('loggedUserName')\n  );\n  const [loggedUserImage, setLoggedUserImage] = useState(\n    localStorage.getItem('loggedUserPhoto') || ex1\n  );\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await supabase.auth.getSession();\n      const email = data.session.user.email;\n      const requestData = {\n        email: email,\n      };\n\n      if (!localStorage.getItem('loggedUserName')) {\n        axios\n          .post('toonder/name', requestData)\n          .then((loggedUserData) => {\n            console.log(loggedUserData.data.mem_name);\n            setLoggedUserName(loggedUserData.data.mem_name);\n            localStorage.setItem(\n              'loggedUserName',\n              loggedUserData.data.mem_name\n            );\n          })\n          .catch((error) => console.log(error));\n      }\n\n      if (!localStorage.getItem('loggedUserPhoto')) {\n        axios\n          .post('toonder/photo', requestData)\n          .then((loggedUserData) => {\n            console.log(loggedUserData.data.mem_photo);\n            setLoggedUserImage(loggedUserData.data.mem_photo);\n            localStorage.setItem(\n              'loggedUserPhoto',\n              loggedUserData.data.mem_photo\n            );\n          })\n          .catch((error) => console.log(error));\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"mainBackSmall\">\n      <div className=\"mainInfo\">\n        <div onClick={openModal}>\n          <img id=\"infoimg\" src={loggedUserImage} alt=\"image error\" />\n        </div>\n        <h2>{loggedUserName}</h2>\n        <button\n          id=\"changeInfo\"\n          onClick={() => {\n            navigate('/infochange');\n          }}\n        >\n          <h3>정보수정</h3>\n        </button>\n      </div>\n      <div className=\"mainButtonSet\">\n        <button\n          id=\"webtoonList\"\n          onClick={() => {\n            navigate('/mainWebtoonList');\n          }}\n        >\n          웹툰 목록\n        </button>\n        <button\n          id=\"mypage\"\n          onClick={() => {\n            navigate('/mypage');\n          }}\n        >\n          마이페이지\n        </button>\n        <button\n          id=\"freeBoard\"\n          onClick={() => {\n            navigate('/freeboard');\n          }}\n        >\n          자유게시판\n        </button>\n        <button\n          id=\"logOut\"\n          onClick={async () => {\n            localStorage.removeItem('loggedUserPhoto');\n            localStorage.removeItem('loggedUserName');\n            localStorage.removeItem('loggedUserHashTag');\n            sessionStorage.removeItem('loggedUserEmail'); // 세션 스토리지에서 loggedUserEmail 제거\n\n            await supabase.auth.signOut();\n            navigate('/');\n          }}\n        >\n          로그아웃\n        </button>\n      </div>\n      {modalOpen && (\n        <ModalBasic\n          setModalOpen={setModalOpen}\n          setLoggedUserImage={setLoggedUserImage}\n          openModal={openModal}\n        />\n      )}\n      {props.children}\n    </div>\n  );\n}\n\nfunction ModalBasic({ setModalOpen, setLoggedUserImage, openModal }) {\n  const [selectedImage, setSelectedImage] = useState(\n    localStorage.getItem('loggedUserPhoto') || ex1\n  );\n  const [newImage, setNewImage] = useState(null);\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      setSelectedImage(reader.result);\n      setNewImage(file);\n    };\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSave = async () => {\n    if (newImage) {\n      console.log('새 이미지 저장:', newImage);\n\n      const { data } = await supabase.auth.getSession();\n      axios\n        .post('toonder/photo/update', {\n          email: data.session.user.email,\n          image: selectedImage,\n        })\n        .then((res) => console.log(res))\n        .catch((error) => console.log(error));\n\n      localStorage.setItem('loggedUserPhoto', selectedImage);\n      setLoggedUserImage(selectedImage);\n    }\n\n    closeModal();\n  };\n\n  const modalRef = useRef(null);\n\n  useEffect(() => {\n    const handler = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setModalOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handler);\n\n    return () => {\n      document.removeEventListener('mousedown', handler);\n    };\n  }, []);\n\n  return (\n    <div className=\"profilechangeback\">\n      <div className=\"profilechange\" ref={modalRef}>\n        <img id=\"changeinfoimg\" src={selectedImage} alt=\"image error\" />\n        <div id=\"changeFile\">\n          <label htmlFor=\"chooseFile\">\n            <h3>프로필 사진 변경</h3>\n          </label>\n        </div>\n        <div style={{ position: 'relative' }}>\n          <input\n            type=\"file\"\n            id=\"chooseFile\"\n            name=\"chooseFile\"\n            accept=\"image/*\"\n            onChange={handleFileChange}\n            style={{\n              position: 'absolute',\n              right: '-200px',\n              top: '0px',\n              marginTop: '10px',\n            }}\n          />\n        </div>\n        <div id=\"changeButtonSet\" style={{ marginTop: '25px' }}>\n          <button id=\"submitButton\" type=\"submit\" onClick={handleSave}>\n            <h3>저장</h3>\n          </button>\n          <br />\n          <button id=\"cancel\" onClick={closeModal}>\n            <h3>취소</h3>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainBackSmall;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/ID_background.js",["159","160","161"],[],"import React from 'react';\nimport styles from '../../style.css';\nimport logo from '../../images/logoimage.png';\nimport { Link } from 'react-router-dom';\n\nfunction IDBackground(props) {\n  return (\n    <div className=\"id_background\">\n      <div className=\"find_logo\">\n        <img src={logo} width=\"84px\" height=\"93px\" alt=\"image error\" />\n        <strong>{props.text}</strong>\n      </div>\n      {props.children} {/* props.children 렌더링 */}\n    </div>\n  );\n}\n\nexport default IDBackground;\n\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/supabase.js",["162"],[],"import { createClient } from '@supabase/supabase-js';\nimport { Auth } from '@supabase/auth-ui-react';\n\nconst supabaseUrl = 'https://fsxogdtxxerrzpdgyyac.supabase.co/';\nconst supabaseKey =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZzeG9nZHR4eGVycnpwZGd5eWFjIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODI4NzA4NTQsImV4cCI6MTk5ODQ0Njg1NH0.4ayoRXi9Z0745i2dyqIjvm23CSBRK--iAFspUAy6pOw';\n\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nexport default supabase;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/mainBackground.js",["163","164","165","166","167"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport logo from '../../images/logoimage.png';\nimport './backGround.module.css';\nimport axios from 'axios';\n\nfunction MainBackgorund(props) {\n  const navigate = useNavigate();\n  const [loggedUserName, setLoggedUserName] = useState('지금 로그인하세요!');\n\n  return (\n    <div className=\"mainPageBack\">\n      <div className=\"logoSearch\">\n        {' '}\n        {/* 좌우구분용 네브 */}\n        <div className=\"mainLogo\">\n          <button\n            id=\"main_page\"\n            onClick={() => {\n              navigate('/main_page');\n            }}\n          >\n            <img src={logo} width=\"84px\" height=\"93px\" alt=\"image error\" />\n            <h1>Toonder</h1>\n          </button>\n        </div>\n        <div className=\"mainSearch\">\n          <input\n            id=\"mainSearchInput\"\n            type=\"text\"\n            placeholder=\"    찾고싶은 웹툰 검색!\"\n          />\n          <button id=\"mainSearchButton\">검색</button>\n        </div>\n      </div>\n      {props.children} {/* props.children 렌더링 */}\n    </div>\n  );\n}\nexport default MainBackgorund;\n","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/backgrounds/backGround.js",["168","169"],[],"import React from 'react';\nimport styles from './backGround.module.css';\nimport logo from '../../images/logoimage.png';\nimport { Link } from 'react-router-dom';\n//\nfunction Background(props) {\n  return (\n    <div\n      className={styles.background}\n      style={{ backgroundSize: props.backgroundSize }} //백그라운드 사이즈를 props 객체로 전달해서 컴포넌트마다 사이즈를 조정해서 사용가능\n    >\n      <div\n        className={styles.logo}\n        style={\n          {\n            top: props.top,\n            left: props.left,\n          } /*로고 위치도 props로 전달받아 컴포넌트마다 위치를 조장해서 사용가능 */\n        }\n      >\n        <img src={logo} width=\"84px\" height=\"93px\" alt=\"image error\" />\n        <strong>{props.text}</strong>\n      </div>\n      {props.children} {/* props.children 렌더링 */}\n    </div>\n  );\n}\n\nexport default Background;","/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/freeboard/write.js",[],[],{"ruleId":"170","severity":1,"message":"171","line":3,"column":17,"nodeType":"172","messageId":"173","endLine":3,"endColumn":26},{"ruleId":"170","severity":1,"message":"174","line":3,"column":28,"nodeType":"172","messageId":"173","endLine":3,"endColumn":36},{"ruleId":"170","severity":1,"message":"175","line":15,"column":8,"nodeType":"172","messageId":"173","endLine":15,"endColumn":13},{"ruleId":"170","severity":1,"message":"176","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"177","line":10,"column":9,"nodeType":"172","messageId":"173","endLine":10,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":17,"column":11,"nodeType":"180","endLine":17,"endColumn":46},{"ruleId":"178","severity":1,"message":"179","line":29,"column":16,"nodeType":"180","endLine":29,"endColumn":51},{"ruleId":"178","severity":1,"message":"179","line":30,"column":27,"nodeType":"180","endLine":30,"endColumn":62},{"ruleId":"178","severity":1,"message":"179","line":31,"column":27,"nodeType":"180","endLine":31,"endColumn":62},{"ruleId":"178","severity":1,"message":"179","line":32,"column":27,"nodeType":"180","endLine":32,"endColumn":62},{"ruleId":"178","severity":1,"message":"179","line":35,"column":19,"nodeType":"180","endLine":35,"endColumn":54},{"ruleId":"178","severity":1,"message":"179","line":36,"column":19,"nodeType":"180","endLine":36,"endColumn":54},{"ruleId":"178","severity":1,"message":"179","line":37,"column":19,"nodeType":"180","endLine":37,"endColumn":54},{"ruleId":"178","severity":1,"message":"179","line":38,"column":19,"nodeType":"180","endLine":38,"endColumn":54},{"ruleId":"170","severity":1,"message":"181","line":9,"column":10,"nodeType":"172","messageId":"173","endLine":9,"endColumn":24},{"ruleId":"170","severity":1,"message":"182","line":9,"column":26,"nodeType":"172","messageId":"173","endLine":9,"endColumn":43},{"ruleId":"170","severity":1,"message":"183","line":10,"column":9,"nodeType":"172","messageId":"173","endLine":10,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":51,"column":11,"nodeType":"180","endLine":51,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":52,"column":11,"nodeType":"180","endLine":52,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":53,"column":11,"nodeType":"180","endLine":53,"endColumn":42},{"ruleId":"184","severity":1,"message":"185","line":56,"column":11,"nodeType":"180","endLine":56,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":57,"column":11,"nodeType":"180","endLine":57,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":58,"column":11,"nodeType":"180","endLine":58,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":59,"column":11,"nodeType":"180","endLine":59,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":60,"column":11,"nodeType":"180","endLine":60,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":61,"column":11,"nodeType":"180","endLine":61,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":62,"column":11,"nodeType":"180","endLine":62,"endColumn":23},{"ruleId":"170","severity":1,"message":"186","line":21,"column":21,"nodeType":"172","messageId":"173","endLine":21,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":32,"column":6,"nodeType":"189","endLine":32,"endColumn":8,"suggestions":"190"},{"ruleId":"170","severity":1,"message":"191","line":7,"column":10,"nodeType":"172","messageId":"173","endLine":7,"endColumn":21},{"ruleId":"170","severity":1,"message":"186","line":19,"column":21,"nodeType":"172","messageId":"173","endLine":19,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":43,"column":6,"nodeType":"189","endLine":43,"endColumn":8,"suggestions":"192"},{"ruleId":"178","severity":1,"message":"179","line":135,"column":29,"nodeType":"180","endLine":143,"endColumn":31},{"ruleId":"170","severity":1,"message":"193","line":1,"column":38,"nodeType":"172","messageId":"173","endLine":1,"endColumn":44},{"ruleId":"170","severity":1,"message":"194","line":207,"column":13,"nodeType":"172","messageId":"173","endLine":207,"endColumn":17},{"ruleId":"170","severity":1,"message":"195","line":26,"column":9,"nodeType":"172","messageId":"173","endLine":26,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":70,"column":13,"nodeType":"180","endLine":70,"endColumn":73},{"ruleId":"187","severity":1,"message":"196","line":179,"column":6,"nodeType":"189","endLine":179,"endColumn":8,"suggestions":"197"},{"ruleId":"178","severity":1,"message":"179","line":184,"column":9,"nodeType":"180","endLine":184,"endColumn":73},{"ruleId":"170","severity":1,"message":"195","line":22,"column":9,"nodeType":"172","messageId":"173","endLine":22,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":70,"column":11,"nodeType":"180","endLine":70,"endColumn":71},{"ruleId":"187","severity":1,"message":"196","line":192,"column":6,"nodeType":"189","endLine":192,"endColumn":8,"suggestions":"198"},{"ruleId":"178","severity":1,"message":"179","line":197,"column":9,"nodeType":"180","endLine":197,"endColumn":73},{"ruleId":"170","severity":1,"message":"176","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"199","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":10,"column":9,"nodeType":"180","endLine":10,"endColumn":72},{"ruleId":"170","severity":1,"message":"200","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"175","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":13},{"ruleId":"170","severity":1,"message":"181","line":9,"column":10,"nodeType":"172","messageId":"173","endLine":9,"endColumn":24},{"ruleId":"170","severity":1,"message":"182","line":9,"column":26,"nodeType":"172","messageId":"173","endLine":9,"endColumn":43},{"ruleId":"178","severity":1,"message":"179","line":23,"column":13,"nodeType":"180","endLine":23,"endColumn":76},{"ruleId":"170","severity":1,"message":"199","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":21,"column":9,"nodeType":"180","endLine":21,"endColumn":72},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'styles' is defined but never used.","'navigate' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'loggedUserName' is assigned a value but never used.","'setLoggedUserName' is assigned a value but never used.","'email' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'useLocation' is defined but never used.",["202"],"'useRef' is defined but never used.","'data' is assigned a value but never used.","'closeModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setModalOpen'. Either include it or remove the dependency array. If 'setModalOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["203"],["204"],"'Link' is defined but never used.","'Auth' is defined but never used.",{"desc":"205","fix":"206"},{"desc":"205","fix":"207"},{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},"Update the dependencies array to be: [navigate]",{"range":"211","text":"212"},{"range":"213","text":"212"},"Update the dependencies array to be: [setModalOpen]",{"range":"214","text":"215"},{"range":"216","text":"215"},[1180,1182],"[navigate]",[1295,1297],[4655,4657],"[setModalOpen]",[4958,4960]]