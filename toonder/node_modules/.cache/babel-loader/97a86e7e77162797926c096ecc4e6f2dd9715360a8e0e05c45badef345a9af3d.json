{"ast":null,"code":"var _jsxFileName = \"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/practice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckboxContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-height: 300px;\n  overflow-y: scroll;\n  border: 1px solid #ccc;\n  padding: 10px;\n  width: 200px;\n`;\n_c = CheckboxContainer;\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n`;\n_c2 = CheckboxLabel;\nconst CheckboxInput = styled.input`\n  margin-right: 5px;\n`;\n_c3 = CheckboxInput;\nconst hashtagOptions = ['공포', '드라마', '코믹', '일상', '판타지', '액션', '역사', '학원', 'SF', '학습만화', '캠페인', '스포츠', '동성애', '추리', '모험', '무협', '시사', '교양', '요리', '성인', '순정', 'BL', '소년', '미스터리', 'GL', '로맨스판타지', '카툰', '기관발행물', '만화이론', '로맨스', '그래픽노블', '개그'];\nfunction Practice() {\n  _s();\n  const [selectedHashtags, setSelectedHashtags] = useState([]);\n  const handleCheckboxChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    if (checked) {\n      setSelectedHashtags(prevSelectedHashtags => [...prevSelectedHashtags, value]);\n    } else {\n      setSelectedHashtags(prevSelectedHashtags => prevSelectedHashtags.filter(hashtag => hashtag !== value));\n    }\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const hashtag = selectedHashtags.join(' ');\n    console.log(hashtag);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CheckboxContainer, {\n        children: hashtagOptions.map(hashtag => /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n          children: [/*#__PURE__*/_jsxDEV(CheckboxInput, {\n            type: \"checkbox\",\n            value: hashtag,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), hashtag]\n        }, hashtag, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Practice, \"DPbdeyzlJ/OwjDnXv8lc/z8pDrY=\");\n_c4 = Practice;\nexport default Practice;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CheckboxContainer\");\n$RefreshReg$(_c2, \"CheckboxLabel\");\n$RefreshReg$(_c3, \"CheckboxInput\");\n$RefreshReg$(_c4, \"Practice\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","CheckboxContainer","div","_c","CheckboxLabel","label","_c2","CheckboxInput","input","_c3","hashtagOptions","Practice","_s","selectedHashtags","setSelectedHashtags","handleCheckboxChange","event","value","checked","target","prevSelectedHashtags","filter","hashtag","handleFormSubmit","preventDefault","join","console","log","children","onSubmit","map","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/practice.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst CheckboxContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-height: 300px;\n  overflow-y: scroll;\n  border: 1px solid #ccc;\n  padding: 10px;\n  width: 200px;\n`;\n\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n`;\n\nconst CheckboxInput = styled.input`\n  margin-right: 5px;\n`;\n\nconst hashtagOptions = [\n  '공포',\n  '드라마',\n  '코믹',\n  '일상',\n  '판타지',\n  '액션',\n  '역사',\n  '학원',\n  'SF',\n  '학습만화',\n  '캠페인',\n  '스포츠',\n  '동성애',\n  '추리',\n  '모험',\n  '무협',\n  '시사',\n  '교양',\n  '요리',\n  '성인',\n  '순정',\n  'BL',\n  '소년',\n  '미스터리',\n  'GL',\n  '로맨스판타지',\n  '카툰',\n  '기관발행물',\n  '만화이론',\n  '로맨스',\n  '그래픽노블',\n  '개그',\n];\n\nfunction Practice() {\n  const [selectedHashtags, setSelectedHashtags] = useState([]);\n\n  const handleCheckboxChange = (event) => {\n    const { value, checked } = event.target;\n    if (checked) {\n      setSelectedHashtags((prevSelectedHashtags) => [\n        ...prevSelectedHashtags,\n        value,\n      ]);\n    } else {\n      setSelectedHashtags((prevSelectedHashtags) =>\n        prevSelectedHashtags.filter((hashtag) => hashtag !== value)\n      );\n    }\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    const hashtag = selectedHashtags.join(' ');\n    console.log(hashtag);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit}>\n        <CheckboxContainer>\n          {hashtagOptions.map((hashtag) => (\n            <CheckboxLabel key={hashtag}>\n              <CheckboxInput\n                type=\"checkbox\"\n                value={hashtag}\n                onChange={handleCheckboxChange}\n              />\n              {hashtag}\n            </CheckboxLabel>\n          ))}\n        </CheckboxContainer>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Practice;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}