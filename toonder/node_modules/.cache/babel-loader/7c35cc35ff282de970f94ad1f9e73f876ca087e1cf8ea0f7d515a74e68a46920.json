{"ast":null,"code":"var _jsxFileName = \"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/freeboard/freeboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './freeboard.css';\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport axios from 'axios';\nimport { FaSpinner } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Freeboard() {\n  _s();\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    document.title = 'Toonder 자유게시판';\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/toonder/board?p_num=${pageNum}`);\n        setPosts(response.data);\n        let total = pageNum;\n        let hasMorePages = true;\n        while (hasMorePages) {\n          const response = await axios.get(`/toonder/board?p_num=${total + 1}`);\n          if (response.data.length === 0) {\n            hasMorePages = false;\n          } else {\n            total++;\n          }\n        }\n        setTotalPages(total);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [pageNum]);\n  const goToPage = page => {\n    setPageNum(page);\n  };\n  const goToPrevPage = () => {\n    if (pageNum > 1) {\n      setPageNum(pageNum - 1);\n    }\n  };\n  const goToNextPage = () => {\n    if (pageNum < totalPages) {\n      setPageNum(pageNum + 1);\n    }\n  };\n  const goToFirstPage = () => {\n    setPageNum(1);\n  };\n  const goToLastPage = () => {\n    setPageNum(totalPages);\n  };\n  const paginationButtons = [];\n  const maxPageButtons = Math.min(totalPages, 5);\n  let startPage = Math.max(1, pageNum - 2);\n  if (startPage + maxPageButtons > totalPages) {\n    startPage = totalPages - maxPageButtons + 1;\n  }\n  for (let i = startPage; i < startPage + maxPageButtons; i++) {\n    paginationButtons.push( /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: pageNum === i ? 'active' : '',\n      onClick: () => goToPage(i),\n      children: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(MainBackgorund, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '120px',\n          color: 'white',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative',\n          top: '40%'\n        },\n        children: /*#__PURE__*/_jsxDEV(FaSpinner, {\n          className: \"loadingIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"link-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => {\n                  navigate('/postview', {\n                    state: {\n                      brdNo: post.brdNo\n                    }\n                  });\n                },\n                children: post.brdTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: post.mem_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"|\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\u26AF \", post.brdViewCount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"|\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\u263A \", post.brdLike]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"|\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: post.brdRegDate.split('T')[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)\n          }, post.brdNo, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"freewrite\",\n      style: {\n        marginTop: '-590px'\n      },\n      onClick: () => {\n        navigate('/write');\n      },\n      children: \"\\uAE00\\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Freeboard, \"iVhVSPgpz8swQmvc1khucFZy0PQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Freeboard;\nexport default Freeboard;\nvar _c;\n$RefreshReg$(_c, \"Freeboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","MainBackgorund","axios","FaSpinner","jsxDEV","_jsxDEV","Fragment","_Fragment","Freeboard","_s","navigate","posts","setPosts","pageNum","setPageNum","totalPages","setTotalPages","loading","setLoading","document","title","fetchData","response","get","data","total","hasMorePages","length","error","console","log","goToPage","page","goToPrevPage","goToNextPage","goToFirstPage","goToLastPage","paginationButtons","maxPageButtons","Math","min","startPage","max","i","push","href","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","color","display","alignItems","justifyContent","position","top","map","post","state","brdNo","brdTitle","mem_name","brdViewCount","brdLike","brdRegDate","split","id","marginTop","_c","$RefreshReg$"],"sources":["/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/freeboard/freeboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './freeboard.css';\nimport MainBackgorund from '../backgrounds/mainBackground';\nimport axios from 'axios';\nimport { FaSpinner } from 'react-icons/fa';\n\nfunction Freeboard() {\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    document.title = 'Toonder 자유게시판';\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/toonder/board?p_num=${pageNum}`);\n        setPosts(response.data);\n        let total = pageNum;\n        let hasMorePages = true;\n\n        while (hasMorePages) {\n          const response = await axios.get(`/toonder/board?p_num=${total + 1}`);\n          if (response.data.length === 0) {\n            hasMorePages = false;\n          } else {\n            total++;\n          }\n        }\n\n        setTotalPages(total);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [pageNum]);\n\n  const goToPage = (page) => {\n    setPageNum(page);\n  };\n\n  const goToPrevPage = () => {\n    if (pageNum > 1) {\n      setPageNum(pageNum - 1);\n    }\n  };\n\n  const goToNextPage = () => {\n    if (pageNum < totalPages) {\n      setPageNum(pageNum + 1);\n    }\n  };\n\n  const goToFirstPage = () => {\n    setPageNum(1);\n  };\n\n  const goToLastPage = () => {\n    setPageNum(totalPages);\n  };\n\n  const paginationButtons = [];\n  const maxPageButtons = Math.min(totalPages, 5);\n\n  let startPage = Math.max(1, pageNum - 2);\n  if (startPage + maxPageButtons > totalPages) {\n    startPage = totalPages - maxPageButtons + 1;\n  }\n\n  for (let i = startPage; i < startPage + maxPageButtons; i++) {\n    paginationButtons.push(\n      <a\n        href=\"#\"\n        className={pageNum === i ? 'active' : ''}\n        onClick={() => goToPage(i)}\n      >\n        {i}\n      </a>\n    );\n  }\n\n  return (\n    <MainBackgorund>\n      <div className=\"mainboard\">\n        <br />\n        {loading ? (\n          <div\n            style={{\n              fontSize: '120px',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              position: 'relative',\n              top: '40%',\n            }}\n          >\n            <FaSpinner className=\"loadingIcon\" />\n          </div>\n        ) : (\n          <>\n            <h2>자유게시판</h2>\n            <ul>\n              {posts.map((post) => (\n                <li key={post.brdNo}>\n                  <div className=\"link-wrapper\">\n                    <a\n                      onClick={() => {\n                        navigate('/postview', {\n                          state: { brdNo: post.brdNo },\n                        });\n                      }}\n                    >\n                      {post.brdTitle}\n                    </a>\n                    <div className=\"meta\">\n                      <span>{post.mem_name}</span>\n                      <span>|</span>\n                      <span>⚯ {post.brdViewCount}</span>\n                      <span>|</span>\n                      <span>☺ {post.brdLike}</span>\n                      <span>|</span>\n                      <span>{post.brdRegDate.split('T')[0]}</span>\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n      {!loading && (\n        <button\n          id=\"freewrite\"\n          style={{ marginTop: '-590px' }}\n          onClick={() => {\n            navigate('/write');\n          }}\n        >\n          글쓰기\n        </button>\n      )}\n    </MainBackgorund>\n  );\n}\n\nexport default Freeboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}