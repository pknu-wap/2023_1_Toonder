{"ast":null,"code":"var _jsxFileName = \"/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/freeboard/postview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport MainBackground from '../backgrounds/mainBackground';\nimport styles from './postview.module.css';\nimport supabase from '../supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostView() {\n  _s();\n  var _location$state;\n  // 라우터\n  const navigate = useNavigate();\n  const location = useLocation();\n  const brdNo = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.brdNo;\n\n  // state\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [email, setEmail] = useState();\n  const [editedComment, setEditedComment] = useState('');\n  const [editingCommentId, setEditingCommentId] = useState('');\n  const [comment, setComment] = useState('');\n  const [isCommentDelete, setIsCommentDelete] = useState(false);\n  const [isClickCommentLike, setIsClickCommentLike] = useState(false);\n  //줄바꿈기능\n  const convertLine = text => {\n    return text.split('@d`}').map((line, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  };\n  const convertLineForTextarea = text => {\n    return text.replaceAll('@d`}', '\\n');\n  };\n  const addConvertLine = text => {\n    return text.replace(/\\n/g, '@d`}');\n  };\n  useEffect(() => {\n    document.title = 'Toonder 자유게시판';\n  }, []);\n\n  //이메일 불러오기\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data,\n        error\n      } = await supabase.auth.getSession();\n      const session = data.session;\n      if (session === null) {\n        alert('로그인을 먼저 해주세요.');\n        navigate('/');\n      } else {\n        const email = session.user.email;\n        setEmail(email);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // 게시글 불러오기\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/toonder/board/${brdNo}`);\n        setPost(response.data);\n      } catch (error) {\n        console.log(error);\n        alert('게시글을 불러오지 못했습니다.');\n      } finally {}\n    };\n    fetchData();\n  }, [brdNo]);\n  const handleEditContent = () => {\n    if (post.mem_email !== email) {\n      alert('본인의 게시글만 수정이 가능합니다.');\n      return;\n    } else {\n      navigate('/edit', {\n        state: {\n          brdNo: post.brdNo\n        }\n      });\n    }\n  };\n\n  // 댓글 불러오기\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axios.get(`/toonder/board/${brdNo}/comment`);\n        setComments(response.data);\n      } catch (error) {\n        console.log(error);\n        alert('댓글을 불러오지 못했습니다.');\n      } finally {\n        setIsCommentDelete(false);\n        setIsClickCommentLike(false);\n      }\n    };\n    fetchComments();\n  }, [brdNo, isCommentDelete, isClickCommentLike]);\n\n  //댓글 좋아요\n  const handleLikeComment = async cmtNo => {\n    try {\n      const headers = {\n        mem_email: email\n      };\n      await axios.post(`/toonder/board/${brdNo}/comment/${cmtNo}/like`, null, {\n        headers\n      });\n      alert('댓글 좋아요가 반영되었습니다.');\n    } catch (error) {\n      console.log(error);\n      alert('좋아요가 실패 했습니다.');\n    }\n  };\n\n  // 게시글 삭제\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/toonder/board/${brdNo}`, {\n        data: {\n          mem_email: email\n        }\n      });\n      alert('삭제가 성공했습니다.');\n      navigate('/freeboard');\n    } catch (error) {\n      console.log(error);\n      alert('본인의 게시글만 삭제가 가능합니다.');\n    }\n  };\n\n  //게시글 좋아요\n  const handleLike = async () => {\n    try {\n      const headers = {\n        mem_email: email\n      };\n      await axios.post(`/toonder/board/${brdNo}/like`, null, {\n        headers\n      });\n      alert('좋아요가 반영되었습니다.');\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n      alert('좋아요가 실패 했습니다.');\n    }\n  };\n\n  // 댓글 삭제\n  const handleDeleteComment = async (cmtContent, cmtBno) => {\n    try {\n      await axios.delete(`/toonder/board/${brdNo}/comment/${cmtBno}`, {\n        data: {\n          cmtContent: cmtContent,\n          mem_email: email\n        }\n      });\n      alert('댓글이 삭제되었습니다.');\n      setIsCommentDelete(true);\n    } catch (error) {\n      console.log(error);\n      alert('본인의 댓글만 수정이 가능합니다.');\n    }\n  };\n\n  // 댓글 수정\n  const handleEditComment = (commentId, content) => {\n    setEditingCommentId(commentId);\n    setEditedComment(content);\n  };\n\n  // 댓글 수정 보내기\n  const handleSubmitEditedComment = async commentId => {\n    if (!editedComment) {\n      alert('댓글을 입력하세요.');\n      return;\n    }\n    try {\n      const addLineComment = addConvertLine(editedComment);\n      await axios.put(`/toonder/board/${brdNo}/comment/${commentId}`, {\n        cmtContent: addLineComment,\n        mem_email: email\n      });\n      alert('댓글이 수정되었습니다.');\n      setEditingCommentId(null);\n      setEditedComment('');\n      const response = await axios.get(`/toonder/board/${brdNo}/comment`);\n      setComments(response.data);\n    } catch (error) {\n      console.log(error);\n      alert('본인의 댓글만 수정이 가능합니다.');\n      setEditingCommentId(null);\n    }\n  };\n\n  // 댓글 보내기\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!comment) {\n      alert('댓글을 입력하세요.');\n      return;\n    }\n    const name = localStorage.getItem('loggedUserName');\n    try {\n      const addLineComment = addConvertLine(comment);\n      await axios.post(`/toonder/board/${brdNo}/comment`, {\n        cmtContent: addLineComment,\n        mem_name: name,\n        mem_email: email\n      });\n      alert('댓글이 작성되었습니다.');\n      setComment('');\n      const response = await axios.get(`/toonder/board/${brdNo}/comment`);\n      setComments(response.data);\n    } catch (error) {\n      console.log(error);\n      alert('댓글 작성에 실패했습니다.');\n    }\n  };\n\n  // 게시글 목록을 불러오고나서 랜딩하기 위함\n  if (!post) {\n    return null;\n  }\n  const {\n    brdTitle,\n    brdContent,\n    mem_name,\n    brdRegDate,\n    brdViewCount,\n    brdLike\n  } = post;\n  const formattedDate = brdRegDate.split('T')[0];\n  return /*#__PURE__*/_jsxDEV(MainBackground, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"postinfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: brdTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [mem_name, \" \\xA0|\\xA0 \\uC870\\uD68C\\uC218 : \", brdViewCount, \" \\xA0|\\xA0\", ' ', formattedDate, \" \\xA0|\\xA0 \\uC88B\\uC544\\uC694 : \", brdLike, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.contentButtons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                handleLike();\n              },\n              children: \"\\u263A\\uFE0E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), ' ', \"\\xA0|\\xA0\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                handleEditContent();\n              },\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), ' ', \"\\xA0|\\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDelete,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"postcontent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"[\\uB0B4\\uC6A9]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            borderTop: '1px solid rgb(255, 147, 147)',\n            width: '100%',\n            margin: '10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: convertLine(brdContent)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"repl2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"[\\uB313\\uAE00]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            borderTop: '1px solid rgb(255, 147, 147)',\n            width: '100%',\n            margin: '10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), editingCommentId === comment.cmtNo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: styles.editedCommentInput,\n              value: convertLineForTextarea(editedComment),\n              onChange: e => setEditedComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.metaDataWrap,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.metaData,\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => handleSubmitEditedComment(comment.cmtNo),\n                  children: \"\\uC218\\uC815 \\uC644\\uB8CC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this), ' ', \"|\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => setEditingCommentId(null),\n                  children: \"\\uC218\\uC815 \\uCDE8\\uC18C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [' ', comment.memName, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.wrapContent,\n              children: [\": \", convertLine(comment.cmtContent)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.metaDataWrap,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.metaData,\n                children: [comment.cmtRegDate.split('T')[0], \" \\xA0|\\xA0 \\uC88B\\uC544\\uC694 :\", ' ', comment.cmtLike, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.commentClicker,\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      handleLikeComment(comment.cmtNo);\n                      setIsClickCommentLike(true);\n                    },\n                    children: \"\\u263A\\uFE0E\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 25\n                  }, this), ' ', \"|\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleEditComment(comment.cmtNo, comment.cmtContent),\n                    children: \"\\uC218\\uC815\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 25\n                  }, this), ' ', \"|\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDeleteComment(comment.cmtContent, comment.cmtNo),\n                    children: \"\\uC0AD\\uC81C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 25\n                  }, this), ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, comment.cmtNo, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"commentwrite\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitComment,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: styles.commentInput,\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            placeholder: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.commentSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                position: 'absolute',\n                fontSize: '24px'\n              },\n              type: \"submit\",\n              onClick: handleSubmitComment,\n              children: \"\\uC791\\uC131\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n_s(PostView, \"hmijBB51Nm1Y39XpF7xCQVRh/sY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = PostView;\nexport default PostView;\nvar _c;\n$RefreshReg$(_c, \"PostView\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","MainBackground","styles","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","PostView","_s","_location$state","navigate","location","brdNo","state","post","setPost","comments","setComments","email","setEmail","editedComment","setEditedComment","editingCommentId","setEditingCommentId","comment","setComment","isCommentDelete","setIsCommentDelete","isClickCommentLike","setIsClickCommentLike","convertLine","text","split","map","line","index","children","fileName","_jsxFileName","lineNumber","columnNumber","convertLineForTextarea","replaceAll","addConvertLine","replace","document","title","fetchData","data","error","auth","getSession","session","alert","user","response","get","console","log","handleEditContent","mem_email","fetchComments","handleLikeComment","cmtNo","headers","handleDelete","delete","handleLike","window","reload","handleDeleteComment","cmtContent","cmtBno","handleEditComment","commentId","content","handleSubmitEditedComment","addLineComment","put","handleSubmitComment","e","preventDefault","name","localStorage","getItem","mem_name","brdTitle","brdContent","brdRegDate","brdViewCount","brdLike","formattedDate","className","id","contentButtons","onClick","style","borderTop","width","margin","editedCommentInput","value","onChange","target","metaDataWrap","metaData","memName","wrapContent","cmtRegDate","cmtLike","commentClicker","onSubmit","commentInput","placeholder","commentSubmit","position","fontSize","type","_c","$RefreshReg$"],"sources":["/Users/louis/Desktop/toonder/2023_1_Toonder/toonder/src/component/freeboard/postview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport MainBackground from '../backgrounds/mainBackground';\nimport styles from './postview.module.css';\nimport supabase from '../supabase';\nfunction PostView() {\n  // 라우터\n  const navigate = useNavigate();\n  const location = useLocation();\n  const brdNo = location.state?.brdNo;\n\n  // state\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [email, setEmail] = useState();\n  const [editedComment, setEditedComment] = useState('');\n  const [editingCommentId, setEditingCommentId] = useState('');\n  const [comment, setComment] = useState('');\n  const [isCommentDelete, setIsCommentDelete] = useState(false);\n  const [isClickCommentLike, setIsClickCommentLike] = useState(false);\n  //줄바꿈기능\n  const convertLine = (text) => {\n    return text.split('@d`}').map((line, index) => (\n      <React.Fragment key={index}>\n        {line}\n        <br />\n      </React.Fragment>\n    ));\n  };\n  const convertLineForTextarea = (text) => {\n    return text.replaceAll('@d`}', '\\n');\n  };\n\n  const addConvertLine = (text) => {\n    return text.replace(/\\n/g, '@d`}');\n  };\n\n  useEffect(() => {\n    document.title = 'Toonder 자유게시판';\n  }, []);\n\n  //이메일 불러오기\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data, error } = await supabase.auth.getSession();\n      const session = data.session;\n\n      if (session === null) {\n        alert('로그인을 먼저 해주세요.');\n        navigate('/');\n      } else {\n        const email = session.user.email;\n        setEmail(email);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // 게시글 불러오기\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/toonder/board/${brdNo}`);\n        setPost(response.data);\n      } catch (error) {\n        console.log(error);\n        alert('게시글을 불러오지 못했습니다.');\n      } finally {\n      }\n    };\n\n    fetchData();\n  }, [brdNo]);\n\n  const handleEditContent = () => {\n    if (post.mem_email !== email) {\n      alert('본인의 게시글만 수정이 가능합니다.');\n      return;\n    } else {\n      navigate('/edit', {\n        state: { brdNo: post.brdNo },\n      });\n    }\n  };\n\n  // 댓글 불러오기\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axios.get(`/toonder/board/${brdNo}/comment`);\n        setComments(response.data);\n      } catch (error) {\n        console.log(error);\n        alert('댓글을 불러오지 못했습니다.');\n      } finally {\n        setIsCommentDelete(false);\n        setIsClickCommentLike(false);\n      }\n    };\n\n    fetchComments();\n  }, [brdNo, isCommentDelete, isClickCommentLike]);\n\n  //댓글 좋아요\n  const handleLikeComment = async (cmtNo) => {\n    try {\n      const headers = {\n        mem_email: email,\n      };\n      await axios.post(`/toonder/board/${brdNo}/comment/${cmtNo}/like`, null, {\n        headers,\n      });\n      alert('댓글 좋아요가 반영되었습니다.');\n    } catch (error) {\n      console.log(error);\n      alert('좋아요가 실패 했습니다.');\n    }\n  };\n\n  // 게시글 삭제\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/toonder/board/${brdNo}`, {\n        data: { mem_email: email },\n      });\n      alert('삭제가 성공했습니다.');\n      navigate('/freeboard');\n    } catch (error) {\n      console.log(error);\n      alert('본인의 게시글만 삭제가 가능합니다.');\n    }\n  };\n\n  //게시글 좋아요\n  const handleLike = async () => {\n    try {\n      const headers = {\n        mem_email: email,\n      };\n      await axios.post(`/toonder/board/${brdNo}/like`, null, {\n        headers,\n      });\n      alert('좋아요가 반영되었습니다.');\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n      alert('좋아요가 실패 했습니다.');\n    }\n  };\n\n  // 댓글 삭제\n  const handleDeleteComment = async (cmtContent, cmtBno) => {\n    try {\n      await axios.delete(`/toonder/board/${brdNo}/comment/${cmtBno}`, {\n        data: { cmtContent: cmtContent, mem_email: email },\n      });\n      alert('댓글이 삭제되었습니다.');\n      setIsCommentDelete(true);\n    } catch (error) {\n      console.log(error);\n      alert('본인의 댓글만 수정이 가능합니다.');\n    }\n  };\n\n  // 댓글 수정\n  const handleEditComment = (commentId, content) => {\n    setEditingCommentId(commentId);\n    setEditedComment(content);\n  };\n\n  // 댓글 수정 보내기\n  const handleSubmitEditedComment = async (commentId) => {\n    if (!editedComment) {\n      alert('댓글을 입력하세요.');\n      return;\n    }\n\n    try {\n      const addLineComment = addConvertLine(editedComment);\n      await axios.put(`/toonder/board/${brdNo}/comment/${commentId}`, {\n        cmtContent: addLineComment,\n        mem_email: email,\n      });\n      alert('댓글이 수정되었습니다.');\n      setEditingCommentId(null);\n      setEditedComment('');\n\n      const response = await axios.get(`/toonder/board/${brdNo}/comment`);\n      setComments(response.data);\n    } catch (error) {\n      console.log(error);\n      alert('본인의 댓글만 수정이 가능합니다.');\n      setEditingCommentId(null);\n    }\n  };\n\n  // 댓글 보내기\n  const handleSubmitComment = async (e) => {\n    e.preventDefault();\n    if (!comment) {\n      alert('댓글을 입력하세요.');\n      return;\n    }\n    const name = localStorage.getItem('loggedUserName');\n    try {\n      const addLineComment = addConvertLine(comment);\n      await axios.post(`/toonder/board/${brdNo}/comment`, {\n        cmtContent: addLineComment,\n        mem_name: name,\n        mem_email: email,\n      });\n      alert('댓글이 작성되었습니다.');\n      setComment('');\n\n      const response = await axios.get(`/toonder/board/${brdNo}/comment`);\n      setComments(response.data);\n    } catch (error) {\n      console.log(error);\n      alert('댓글 작성에 실패했습니다.');\n    }\n  };\n\n  // 게시글 목록을 불러오고나서 랜딩하기 위함\n  if (!post) {\n    return null;\n  }\n\n  const { brdTitle, brdContent, mem_name, brdRegDate, brdViewCount, brdLike } =\n    post;\n  const formattedDate = brdRegDate.split('T')[0];\n\n  return (\n    <MainBackground>\n      <div className=\"postboard\">\n        <br />\n        <h2>자유게시판</h2>\n        <br />\n        <div id=\"postinfo\">\n          <h1>{brdTitle}</h1>\n          <br />\n          <h4>\n            {mem_name} &nbsp;|&nbsp; 조회수 : {brdViewCount} &nbsp;|&nbsp;{' '}\n            {formattedDate} &nbsp;|&nbsp; 좋아요 : {brdLike}\n            <div className={styles.contentButtons}>\n              <button\n                onClick={() => {\n                  handleLike();\n                }}\n              >\n                ☺︎\n              </button>{' '}\n              &nbsp;|&nbsp;{' '}\n              <button\n                onClick={() => {\n                  handleEditContent();\n                }}\n              >\n                수정\n              </button>{' '}\n              &nbsp;|&nbsp; <button onClick={handleDelete}>삭제</button>\n            </div>\n          </h4>\n        </div>\n        <div id=\"postcontent\">\n          <h3>[내용]</h3>\n          <div\n            style={{\n              borderTop: '1px solid rgb(255, 147, 147)',\n              width: '100%',\n              margin: '10px 0',\n            }}\n          />\n          <br />\n          <p>{convertLine(brdContent)}</p>\n        </div>\n        <div id=\"repl2\">\n          <h3>[댓글]</h3>\n          <div\n            style={{\n              borderTop: '1px solid rgb(255, 147, 147)',\n              width: '100%',\n              margin: '10px 0',\n            }}\n          />\n          {comments.map((comment) => (\n            <div key={comment.cmtNo}>\n              <br />\n              {editingCommentId === comment.cmtNo ? (\n                <>\n                  &nbsp;&nbsp;\n                  <textarea\n                    className={styles.editedCommentInput}\n                    value={convertLineForTextarea(editedComment)}\n                    onChange={(e) => setEditedComment(e.target.value)}\n                  ></textarea>\n                  <div className={styles.metaDataWrap}>\n                    <div className={styles.metaData}>\n                      <a\n                        onClick={() => handleSubmitEditedComment(comment.cmtNo)}\n                      >\n                        수정 완료\n                      </a>{' '}\n                      |{' '}\n                      <a onClick={() => setEditingCommentId(null)}>수정 취소</a>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <>\n                  {' '}\n                  {comment.memName}\n                  <div className={styles.wrapContent}>\n                    : {convertLine(comment.cmtContent)}\n                  </div>\n                  <div className={styles.metaDataWrap}>\n                    <p className={styles.metaData}>\n                      {comment.cmtRegDate.split('T')[0]} &nbsp;|&nbsp; 좋아요 :{' '}\n                      {comment.cmtLike}\n                      <div className={styles.commentClicker}>\n                        <button\n                          onClick={() => {\n                            handleLikeComment(comment.cmtNo);\n                            setIsClickCommentLike(true);\n                          }}\n                        >\n                          ☺︎\n                        </button>{' '}\n                        |{' '}\n                        <button\n                          onClick={() =>\n                            handleEditComment(comment.cmtNo, comment.cmtContent)\n                          }\n                        >\n                          수정\n                        </button>{' '}\n                        |{' '}\n                        <button\n                          onClick={() =>\n                            handleDeleteComment(\n                              comment.cmtContent,\n                              comment.cmtNo\n                            )\n                          }\n                        >\n                          삭제\n                        </button>{' '}\n                      </div>\n                    </p>\n                  </div>\n                </>\n              )}\n            </div>\n          ))}\n        </div>\n        <div id=\"commentwrite\">\n          <form onSubmit={handleSubmitComment}>\n            <textarea\n              className={styles.commentInput}\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n              placeholder=\"댓글을 작성하세요\"\n            ></textarea>\n            <div className={styles.commentSubmit}>\n              <a\n                style={{\n                  position: 'absolute',\n                  fontSize: '24px',\n                }}\n                type=\"submit\"\n                onClick={handleSubmitComment}\n              >\n                작성\n              </a>\n            </div>\n          </form>\n        </div>\n      </div>\n    </MainBackground>\n  );\n}\n\nexport default PostView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}