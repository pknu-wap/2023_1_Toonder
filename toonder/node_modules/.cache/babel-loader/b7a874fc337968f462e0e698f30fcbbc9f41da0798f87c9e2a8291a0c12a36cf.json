{"ast":null,"code":"export class FunctionsError extends Error {\n  constructor(message) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'FunctionsError';\n    let context = arguments.length > 2 ? arguments[2] : undefined;\n    super(message);\n    super.name = name;\n    this.context = context;\n  }\n}\nexport class FunctionsFetchError extends FunctionsError {\n  constructor(context) {\n    super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n  }\n}\nexport class FunctionsRelayError extends FunctionsError {\n  constructor(context) {\n    super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n  }\n}\nexport class FunctionsHttpError extends FunctionsError {\n  constructor(context) {\n    super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n  }\n}","map":{"version":3,"names":["FunctionsError","Error","constructor","message","name","arguments","length","undefined","context","FunctionsFetchError","FunctionsRelayError","FunctionsHttpError"],"sources":["C:\\Users\\YEONSU PARK\\Desktop\\2023_1_Toonder-main\\2023_1_Toonder-main\\toonder\\node_modules\\@supabase\\functions-js\\src\\types.ts"],"sourcesContent":["export type Fetch = typeof fetch\n\n/**\n * Response format\n *\n */\nexport interface FunctionsResponseSuccess<T> {\n  data: T\n  error: null\n}\nexport interface FunctionsResponseFailure {\n  data: null\n  error: any\n}\nexport type FunctionsResponse<T> = FunctionsResponseSuccess<T> | FunctionsResponseFailure\n\nexport class FunctionsError extends Error {\n  context: any\n  constructor(message: string, name = 'FunctionsError', context?: any) {\n    super(message)\n    super.name = name\n    this.context = context\n  }\n}\n\nexport class FunctionsFetchError extends FunctionsError {\n  constructor(context: any) {\n    super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context)\n  }\n}\n\nexport class FunctionsRelayError extends FunctionsError {\n  constructor(context: any) {\n    super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context)\n  }\n}\n\nexport class FunctionsHttpError extends FunctionsError {\n  constructor(context: any) {\n    super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context)\n  }\n}\n\nexport type FunctionInvokeOptions = {\n  /**\n   * Object representing the headers to send with the request.\n   * */\n  headers?: { [key: string]: string }\n  /**\n   * The HTTP verb of the request\n   */\n  method?: 'POST' | 'GET' | 'PUT' | 'PATCH' | 'DELETE'\n  /**\n   * The body of the request.\n   */\n  body?:\n    | File\n    | Blob\n    | ArrayBuffer\n    | FormData\n    | ReadableStream<Uint8Array>\n    | Record<string, any>\n    | string\n}\n"],"mappings":"AAgBA,OAAM,MAAOA,cAAe,SAAQC,KAAK;EAEvCC,YAAYC,OAAe,EAAwC;IAAA,IAAtCC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,gBAAgB;IAAA,IAAEG,OAAa,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IACjE,KAAK,CAACJ,OAAO,CAAC;IACd,KAAK,CAACC,IAAI,GAAGA,IAAI;IACjB,IAAI,CAACI,OAAO,GAAGA,OAAO;EACxB;;AAGF,OAAM,MAAOC,mBAAoB,SAAQT,cAAc;EACrDE,YAAYM,OAAY;IACtB,KAAK,CAAC,+CAA+C,EAAE,qBAAqB,EAAEA,OAAO,CAAC;EACxF;;AAGF,OAAM,MAAOE,mBAAoB,SAAQV,cAAc;EACrDE,YAAYM,OAAY;IACtB,KAAK,CAAC,wCAAwC,EAAE,qBAAqB,EAAEA,OAAO,CAAC;EACjF;;AAGF,OAAM,MAAOG,kBAAmB,SAAQX,cAAc;EACpDE,YAAYM,OAAY;IACtB,KAAK,CAAC,8CAA8C,EAAE,oBAAoB,EAAEA,OAAO,CAAC;EACtF"},"metadata":{},"sourceType":"module","externalDependencies":[]}